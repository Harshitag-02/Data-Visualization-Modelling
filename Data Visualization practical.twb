<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20232.23.0611.2007                               -->
<workbook original-version='18.1' source-build='2023.2.0 (20232.23.0611.2007)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='Orders (Sample - Superstore)' inline='true' name='federated.0st0xpm04fk1i41dyjn5h16ihx8x' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Sample - Superstore' name='excel-direct.1ivv61k0xcyk3n12ffquu15e67g0'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/dhanu/Downloads/Sample - Superstore.xls' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.1ivv61k0xcyk3n12ffquu15e67g0' name='Orders' table='[Orders$]' type='table'>
          <columns gridOrigin='A1:U9995:no:A1:U9995:0' header='yes' outcome='6'>
            <column datatype='integer' name='Row ID' ordinal='0' />
            <column datatype='string' name='Order ID' ordinal='1' />
            <column datatype='date' name='Order Date' ordinal='2' />
            <column datatype='date' name='Ship Date' ordinal='3' />
            <column datatype='string' name='Ship Mode' ordinal='4' />
            <column datatype='string' name='Customer ID' ordinal='5' />
            <column datatype='string' name='Customer Name' ordinal='6' />
            <column datatype='string' name='Segment' ordinal='7' />
            <column datatype='string' name='Country' ordinal='8' />
            <column datatype='string' name='City' ordinal='9' />
            <column datatype='string' name='State' ordinal='10' />
            <column datatype='integer' name='Postal Code' ordinal='11' />
            <column datatype='string' name='Region' ordinal='12' />
            <column datatype='string' name='Product ID' ordinal='13' />
            <column datatype='string' name='Category' ordinal='14' />
            <column datatype='string' name='Sub-Category' ordinal='15' />
            <column datatype='string' name='Product Name' ordinal='16' />
            <column datatype='real' name='Sales' ordinal='17' />
            <column datatype='integer' name='Quantity' ordinal='18' />
            <column datatype='real' name='Discount' ordinal='19' />
            <column datatype='real' name='Profit' ordinal='20' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.1ivv61k0xcyk3n12ffquu15e67g0' name='Orders' table='[Orders$]' type='table'>
          <columns gridOrigin='A1:U9995:no:A1:U9995:0' header='yes' outcome='6'>
            <column datatype='integer' name='Row ID' ordinal='0' />
            <column datatype='string' name='Order ID' ordinal='1' />
            <column datatype='date' name='Order Date' ordinal='2' />
            <column datatype='date' name='Ship Date' ordinal='3' />
            <column datatype='string' name='Ship Mode' ordinal='4' />
            <column datatype='string' name='Customer ID' ordinal='5' />
            <column datatype='string' name='Customer Name' ordinal='6' />
            <column datatype='string' name='Segment' ordinal='7' />
            <column datatype='string' name='Country' ordinal='8' />
            <column datatype='string' name='City' ordinal='9' />
            <column datatype='string' name='State' ordinal='10' />
            <column datatype='integer' name='Postal Code' ordinal='11' />
            <column datatype='string' name='Region' ordinal='12' />
            <column datatype='string' name='Product ID' ordinal='13' />
            <column datatype='string' name='Category' ordinal='14' />
            <column datatype='string' name='Sub-Category' ordinal='15' />
            <column datatype='string' name='Product Name' ordinal='16' />
            <column datatype='real' name='Sales' ordinal='17' />
            <column datatype='integer' name='Quantity' ordinal='18' />
            <column datatype='real' name='Discount' ordinal='19' />
            <column datatype='real' name='Profit' ordinal='20' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Orders]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:U9995:no:A1:U9995:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Row ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Row ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Row ID</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_B9156BB6D9D74B88886F497DF197B35F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Order ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Order ID</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_B9156BB6D9D74B88886F497DF197B35F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Order Date]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Order Date</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_B9156BB6D9D74B88886F497DF197B35F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Ship Date]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Ship Date</remote-alias>
            <ordinal>3</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_B9156BB6D9D74B88886F497DF197B35F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Mode</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Ship Mode]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Ship Mode</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_B9156BB6D9D74B88886F497DF197B35F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Customer ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Customer ID</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_B9156BB6D9D74B88886F497DF197B35F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Customer Name]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Customer Name</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_B9156BB6D9D74B88886F497DF197B35F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Segment</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Segment]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Segment</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_B9156BB6D9D74B88886F497DF197B35F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_B9156BB6D9D74B88886F497DF197B35F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>130</remote-type>
            <local-name>[City]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_B9156BB6D9D74B88886F497DF197B35F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>130</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_B9156BB6D9D74B88886F497DF197B35F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Postal Code</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Postal Code]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Postal Code</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_B9156BB6D9D74B88886F497DF197B35F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_B9156BB6D9D74B88886F497DF197B35F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Product ID</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_B9156BB6D9D74B88886F497DF197B35F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Category]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Category</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_B9156BB6D9D74B88886F497DF197B35F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sub-Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Sub-Category]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Sub-Category</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_B9156BB6D9D74B88886F497DF197B35F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product Name]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Product Name</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_B9156BB6D9D74B88886F497DF197B35F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sales</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Sales]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Sales</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_B9156BB6D9D74B88886F497DF197B35F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Quantity</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Quantity]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Quantity</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_B9156BB6D9D74B88886F497DF197B35F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Discount</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Discount]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Discount</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_B9156BB6D9D74B88886F497DF197B35F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Profit</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Profit]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Profit</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_B9156BB6D9D74B88886F497DF197B35F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column aggregation='Sum' datatype='integer' default-format='*00000' name='[Postal Code]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
      <column datatype='integer' name='[Row ID]' role='dimension' type='ordinal' />
      <column datatype='string' name='[Ship Mode]' role='dimension' type='nominal' />
      <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='Orders' datatype='table' name='[__tableau_internal_object_id__].[Orders_B9156BB6D9D74B88886F497DF197B35F]' role='measure' type='quantitative' />
      <column-instance column='[Ship Mode]' derivation='None' name='[none:Ship Mode:nk]' pivot='key' type='nominal' />
      <drill-paths>
        <drill-path name='products'>
          <field>[Category]</field>
          <field>[Sub-Category]</field>
          <field>[Product Name]</field>
          <field>[Product ID]</field>
        </drill-path>
      </drill-paths>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Ship Mode:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;First Class&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Standard Class&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Second Class&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Same Day&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Orders' id='Orders_B9156BB6D9D74B88886F497DF197B35F'>
            <properties context=''>
              <relation connection='excel-direct.1ivv61k0xcyk3n12ffquu15e67g0' name='Orders' table='[Orders$]' type='table'>
                <columns gridOrigin='A1:U9995:no:A1:U9995:0' header='yes' outcome='6'>
                  <column datatype='integer' name='Row ID' ordinal='0' />
                  <column datatype='string' name='Order ID' ordinal='1' />
                  <column datatype='date' name='Order Date' ordinal='2' />
                  <column datatype='date' name='Ship Date' ordinal='3' />
                  <column datatype='string' name='Ship Mode' ordinal='4' />
                  <column datatype='string' name='Customer ID' ordinal='5' />
                  <column datatype='string' name='Customer Name' ordinal='6' />
                  <column datatype='string' name='Segment' ordinal='7' />
                  <column datatype='string' name='Country' ordinal='8' />
                  <column datatype='string' name='City' ordinal='9' />
                  <column datatype='string' name='State' ordinal='10' />
                  <column datatype='integer' name='Postal Code' ordinal='11' />
                  <column datatype='string' name='Region' ordinal='12' />
                  <column datatype='string' name='Product ID' ordinal='13' />
                  <column datatype='string' name='Category' ordinal='14' />
                  <column datatype='string' name='Sub-Category' ordinal='15' />
                  <column datatype='string' name='Product Name' ordinal='16' />
                  <column datatype='real' name='Sales' ordinal='17' />
                  <column datatype='integer' name='Quantity' ordinal='18' />
                  <column datatype='real' name='Discount' ordinal='19' />
                  <column datatype='real' name='Profit' ordinal='20' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Sample - Superstore' inline='true' name='federated.12mves90rfesfm10lk2rh19tvhz1' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Sample - Superstore' name='excel-direct.1ymdh2a0om2wbz192jg081naoqyt'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/dhanu/Downloads/Sample - Superstore.xls' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.1ymdh2a0om2wbz192jg081naoqyt' name='Orders' table='[Orders$]' type='table'>
          <columns gridOrigin='A1:U9995:no:A1:U9995:0' header='yes' outcome='6'>
            <column datatype='integer' name='Row ID' ordinal='0' />
            <column datatype='string' name='Order ID' ordinal='1' />
            <column datatype='date' name='Order Date' ordinal='2' />
            <column datatype='date' name='Ship Date' ordinal='3' />
            <column datatype='string' name='Ship Mode' ordinal='4' />
            <column datatype='string' name='Customer ID' ordinal='5' />
            <column datatype='string' name='Customer Name' ordinal='6' />
            <column datatype='string' name='Segment' ordinal='7' />
            <column datatype='string' name='Country' ordinal='8' />
            <column datatype='string' name='City' ordinal='9' />
            <column datatype='string' name='State' ordinal='10' />
            <column datatype='integer' name='Postal Code' ordinal='11' />
            <column datatype='string' name='Region' ordinal='12' />
            <column datatype='string' name='Product ID' ordinal='13' />
            <column datatype='string' name='Category' ordinal='14' />
            <column datatype='string' name='Sub-Category' ordinal='15' />
            <column datatype='string' name='Product Name' ordinal='16' />
            <column datatype='real' name='Sales' ordinal='17' />
            <column datatype='integer' name='Quantity' ordinal='18' />
            <column datatype='real' name='Discount' ordinal='19' />
            <column datatype='real' name='Profit' ordinal='20' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.1ymdh2a0om2wbz192jg081naoqyt' name='Orders' table='[Orders$]' type='table'>
          <columns gridOrigin='A1:U9995:no:A1:U9995:0' header='yes' outcome='6'>
            <column datatype='integer' name='Row ID' ordinal='0' />
            <column datatype='string' name='Order ID' ordinal='1' />
            <column datatype='date' name='Order Date' ordinal='2' />
            <column datatype='date' name='Ship Date' ordinal='3' />
            <column datatype='string' name='Ship Mode' ordinal='4' />
            <column datatype='string' name='Customer ID' ordinal='5' />
            <column datatype='string' name='Customer Name' ordinal='6' />
            <column datatype='string' name='Segment' ordinal='7' />
            <column datatype='string' name='Country' ordinal='8' />
            <column datatype='string' name='City' ordinal='9' />
            <column datatype='string' name='State' ordinal='10' />
            <column datatype='integer' name='Postal Code' ordinal='11' />
            <column datatype='string' name='Region' ordinal='12' />
            <column datatype='string' name='Product ID' ordinal='13' />
            <column datatype='string' name='Category' ordinal='14' />
            <column datatype='string' name='Sub-Category' ordinal='15' />
            <column datatype='string' name='Product Name' ordinal='16' />
            <column datatype='real' name='Sales' ordinal='17' />
            <column datatype='integer' name='Quantity' ordinal='18' />
            <column datatype='real' name='Discount' ordinal='19' />
            <column datatype='real' name='Profit' ordinal='20' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Orders]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:U9995:no:A1:U9995:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Row ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Row ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Row ID</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_F6830FC3C2BD465DBA5ECAECC0C9B627]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Order ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Order ID</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_F6830FC3C2BD465DBA5ECAECC0C9B627]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Order Date]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Order Date</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_F6830FC3C2BD465DBA5ECAECC0C9B627]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Ship Date]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Ship Date</remote-alias>
            <ordinal>3</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_F6830FC3C2BD465DBA5ECAECC0C9B627]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Mode</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Ship Mode]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Ship Mode</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_F6830FC3C2BD465DBA5ECAECC0C9B627]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Customer ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Customer ID</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_F6830FC3C2BD465DBA5ECAECC0C9B627]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Customer Name]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Customer Name</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_F6830FC3C2BD465DBA5ECAECC0C9B627]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Segment</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Segment]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Segment</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_F6830FC3C2BD465DBA5ECAECC0C9B627]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_F6830FC3C2BD465DBA5ECAECC0C9B627]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>130</remote-type>
            <local-name>[City]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_F6830FC3C2BD465DBA5ECAECC0C9B627]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>130</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_F6830FC3C2BD465DBA5ECAECC0C9B627]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Postal Code</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Postal Code]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Postal Code</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_F6830FC3C2BD465DBA5ECAECC0C9B627]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_F6830FC3C2BD465DBA5ECAECC0C9B627]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Product ID</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_F6830FC3C2BD465DBA5ECAECC0C9B627]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Category]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Category</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_F6830FC3C2BD465DBA5ECAECC0C9B627]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sub-Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Sub-Category]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Sub-Category</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_F6830FC3C2BD465DBA5ECAECC0C9B627]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product Name]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Product Name</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_F6830FC3C2BD465DBA5ECAECC0C9B627]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sales</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Sales]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Sales</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_F6830FC3C2BD465DBA5ECAECC0C9B627]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Quantity</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Quantity]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Quantity</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_F6830FC3C2BD465DBA5ECAECC0C9B627]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Discount</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Discount]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Discount</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_F6830FC3C2BD465DBA5ECAECC0C9B627]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Profit</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Profit]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Profit</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_F6830FC3C2BD465DBA5ECAECC0C9B627]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column aggregation='Sum' datatype='integer' default-format='*00000' name='[Postal Code]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
      <column datatype='string' name='[Region]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Row ID]' role='dimension' type='ordinal' />
      <column datatype='string' name='[Segment]' role='dimension' type='nominal' />
      <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column datatype='string' name='[Sub-Category (group) 1]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[Sub-Category]' default='&quot;Other&quot;' new-bin='true'>
          <bin default-name='true' value='&quot;Art, Envelopes, Fasteners and 2 more&quot;'>
            <value>&quot;Art&quot;</value>
            <value>&quot;Envelopes&quot;</value>
            <value>&quot;Fasteners&quot;</value>
            <value>&quot;Labels&quot;</value>
            <value>&quot;Supplies&quot;</value>
          </bin>
        </calculation>
      </column>
      <column datatype='string' name='[Sub-Category (group) 2]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[Sub-Category]' default='&quot;Other&quot;' new-bin='true'>
          <bin default-name='true' value='&quot;Art, Envelopes, Fasteners and 2 more&quot;'>
            <value>&quot;Art&quot;</value>
            <value>&quot;Envelopes&quot;</value>
            <value>&quot;Fasteners&quot;</value>
            <value>&quot;Labels&quot;</value>
            <value>&quot;Supplies&quot;</value>
          </bin>
        </calculation>
      </column>
      <column datatype='string' name='[Sub-Category (group)]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[Sub-Category]' new-bin='true'>
          <bin default-name='true' value='&quot;Accessories, Binders, Copiers&quot;'>
            <value>&quot;Accessories&quot;</value>
            <value>&quot;Binders&quot;</value>
            <value>&quot;Copiers&quot;</value>
          </bin>
        </calculation>
      </column>
      <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='Orders' datatype='table' name='[__tableau_internal_object_id__].[Orders_F6830FC3C2BD465DBA5ECAECC0C9B627]' role='measure' type='quantitative' />
      <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
      <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
      <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
      <column-instance column='[Segment]' derivation='None' name='[none:Segment:nk]' pivot='key' type='nominal' />
      <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
      <group hidden='true' name='[Inclusions (Country,State)]' name-style='unqualified' user:auto-column='include'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Country:nk]' />
          <groupfilter function='level-members' level='[none:State:nk]' />
        </groupfilter>
      </group>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Segment:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Consumer&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Home Office&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Corporate&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Region:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Central&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;West&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;South&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;East&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' type='palette' />
          <encoding attr='shape' type='shape' />
          <encoding attr='color' field='[Sub-Category (group)]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Labels&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Accessories, Binders, Copiers&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Chairs&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Storage&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Machines&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Envelopes&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Appliances&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Fasteners&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Supplies&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Tables&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Paper&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Furnishings&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Art&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Phones&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bookcases&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <default-sorts>
        <manual-sort column='[none:Forecast Indicator:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Actual&quot;</bucket>
            <bucket>&quot;Estimate&quot;</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Orders' id='Orders_F6830FC3C2BD465DBA5ECAECC0C9B627'>
            <properties context=''>
              <relation connection='excel-direct.1ymdh2a0om2wbz192jg081naoqyt' name='Orders' table='[Orders$]' type='table'>
                <columns gridOrigin='A1:U9995:no:A1:U9995:0' header='yes' outcome='6'>
                  <column datatype='integer' name='Row ID' ordinal='0' />
                  <column datatype='string' name='Order ID' ordinal='1' />
                  <column datatype='date' name='Order Date' ordinal='2' />
                  <column datatype='date' name='Ship Date' ordinal='3' />
                  <column datatype='string' name='Ship Mode' ordinal='4' />
                  <column datatype='string' name='Customer ID' ordinal='5' />
                  <column datatype='string' name='Customer Name' ordinal='6' />
                  <column datatype='string' name='Segment' ordinal='7' />
                  <column datatype='string' name='Country' ordinal='8' />
                  <column datatype='string' name='City' ordinal='9' />
                  <column datatype='string' name='State' ordinal='10' />
                  <column datatype='integer' name='Postal Code' ordinal='11' />
                  <column datatype='string' name='Region' ordinal='12' />
                  <column datatype='string' name='Product ID' ordinal='13' />
                  <column datatype='string' name='Category' ordinal='14' />
                  <column datatype='string' name='Sub-Category' ordinal='15' />
                  <column datatype='string' name='Product Name' ordinal='16' />
                  <column datatype='real' name='Sales' ordinal='17' />
                  <column datatype='integer' name='Quantity' ordinal='18' />
                  <column datatype='real' name='Discount' ordinal='19' />
                  <column datatype='real' name='Profit' ordinal='20' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Creating Bar Chart '>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Sample - Superstore)' name='federated.0st0xpm04fk1i41dyjn5h16ihx8x' />
          </datasources>
          <datasource-dependencies datasource='federated.0st0xpm04fk1i41dyjn5h16ihx8x'>
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Ship Mode]' role='dimension' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Ship Mode]' derivation='None' name='[none:Ship Mode:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0st0xpm04fk1i41dyjn5h16ihx8x].[none:Region:nk]'>
            <groupfilter function='member' level='[none:Region:nk]' member='&quot;Central&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0st0xpm04fk1i41dyjn5h16ihx8x].[none:Region:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0st0xpm04fk1i41dyjn5h16ihx8x].[yr:Order Date:ok]' value='73' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='stroke-size' id='refline0' value='0' />
            <format attr='line-visibility' id='refline0' value='off' />
            <format attr='text-align' id='refline0' value='center' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0st0xpm04fk1i41dyjn5h16ihx8x].[none:Ship Mode:nk]' />
            </encodings>
            <reference-line axis-column='[federated.0st0xpm04fk1i41dyjn5h16ihx8x].[sum:Sales:qk]' enable-instant-analytics='true' formula='sum' id='refline0' label-type='value' scope='per-cell' value-column='[federated.0st0xpm04fk1i41dyjn5h16ihx8x].[sum:Sales:qk]' z-order='1' />
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0st0xpm04fk1i41dyjn5h16ihx8x].[none:Region:nk] * [federated.0st0xpm04fk1i41dyjn5h16ihx8x].[sum:Sales:qk])</rows>
        <cols>[federated.0st0xpm04fk1i41dyjn5h16ihx8x].[yr:Order Date:ok]</cols>
      </table>
      <simple-id uuid='{4B0AFA1E-AA9C-4BE4-8966-F606498A942C}' />
    </worksheet>
    <worksheet name='Creating Grid Table or Table Visualization'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sample - Superstore' name='federated.12mves90rfesfm10lk2rh19tvhz1' />
          </datasources>
          <datasource-dependencies datasource='federated.12mves90rfesfm10lk2rh19tvhz1'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.12mves90rfesfm10lk2rh19tvhz1].[sum:Profit:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.12mves90rfesfm10lk2rh19tvhz1].[sum:Profit:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.12mves90rfesfm10lk2rh19tvhz1].[none:Category:nk]</rows>
        <cols />
      </table>
      <simple-id uuid='{96417B37-521D-40B2-B295-65DE9B6FF93D}' />
    </worksheet>
    <worksheet name='Creating Line Chart '>
      <table>
        <view>
          <datasources>
            <datasource caption='Sample - Superstore' name='federated.12mves90rfesfm10lk2rh19tvhz1' />
          </datasources>
          <datasource-dependencies datasource='federated.12mves90rfesfm10lk2rh19tvhz1'>
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='date' name='[Ship Date]' role='dimension' type='ordinal' />
            <column-instance column='[Profit]' derivation='Sum' forecast-column-base='[sum:Profit:qk]' forecast-column-type='forecast-value' name='[fVal:sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' forecast-column-base='[sum:Sales:qk]' forecast-column-type='forecast-value' name='[fVal:sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ship Date]' derivation='Month-Trunc' name='[tmn:Ship Date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.12mves90rfesfm10lk2rh19tvhz1].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.12mves90rfesfm10lk2rh19tvhz1].[fVal:sum:Profit:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.12mves90rfesfm10lk2rh19tvhz1].[fVal:sum:Sales:qk]&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.12mves90rfesfm10lk2rh19tvhz1].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.12mves90rfesfm10lk2rh19tvhz1].[tmn:Ship Date:qk]' value='176' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.12mves90rfesfm10lk2rh19tvhz1].[:Measure Names]' />
              <color column='[federated.12mves90rfesfm10lk2rh19tvhz1].[none:Forecast Indicator:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#d37295' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.12mves90rfesfm10lk2rh19tvhz1].[Multiple Values]</rows>
        <cols>[federated.12mves90rfesfm10lk2rh19tvhz1].[tmn:Ship Date:qk]</cols>
        <forecast-specification auto-forecast-agg='true' band-confidence-level='95.000000' enabled='true' fill-type='fill-missing' ignore-last='1' model-type='auto-season' range-type='auto' show-prediction-bands='true' />
      </table>
      <simple-id uuid='{33522287-FB10-46DB-BCE4-03F60F351031}' />
    </worksheet>
    <worksheet name='Creating Line Chart 1'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sample - Superstore' name='federated.12mves90rfesfm10lk2rh19tvhz1' />
          </datasources>
          <datasource-dependencies datasource='federated.12mves90rfesfm10lk2rh19tvhz1'>
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='date' name='[Ship Date]' role='dimension' type='ordinal' />
            <column-instance column='[Profit]' derivation='Sum' forecast-column-base='[sum:Profit:qk]' forecast-column-type='forecast-value' name='[fVal:sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' forecast-column-base='[sum:Sales:qk]' forecast-column-type='forecast-value' name='[fVal:sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ship Date]' derivation='Month-Trunc' name='[tmn:Ship Date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.12mves90rfesfm10lk2rh19tvhz1].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.12mves90rfesfm10lk2rh19tvhz1].[fVal:sum:Profit:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.12mves90rfesfm10lk2rh19tvhz1].[fVal:sum:Sales:qk]&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.12mves90rfesfm10lk2rh19tvhz1].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.12mves90rfesfm10lk2rh19tvhz1].[:Measure Names]' />
              <color column='[federated.12mves90rfesfm10lk2rh19tvhz1].[none:Forecast Indicator:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.12mves90rfesfm10lk2rh19tvhz1].[Multiple Values]</rows>
        <cols>[federated.12mves90rfesfm10lk2rh19tvhz1].[tmn:Ship Date:qk]</cols>
        <forecast-specification auto-forecast-agg='true' band-confidence-level='95.000000' enabled='true' fill-type='fill-missing' ignore-last='1' model-type='auto-season' range-type='auto' show-prediction-bands='true' />
      </table>
      <simple-id uuid='{D2310E7C-A99C-459C-8740-58AFD479FE10}' />
    </worksheet>
    <worksheet name='Data Hierarchy '>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Sample - Superstore)' name='federated.0st0xpm04fk1i41dyjn5h16ihx8x' />
          </datasources>
          <datasource-dependencies datasource='federated.0st0xpm04fk1i41dyjn5h16ihx8x'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0st0xpm04fk1i41dyjn5h16ihx8x].[sum:Profit:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.0st0xpm04fk1i41dyjn5h16ihx8x].[none:Category:nk] / [federated.0st0xpm04fk1i41dyjn5h16ihx8x].[none:Sub-Category:nk])</rows>
        <cols>[federated.0st0xpm04fk1i41dyjn5h16ihx8x].[sum:Sales:qk]</cols>
      </table>
      <simple-id uuid='{DA519DD2-5473-4FAF-9682-C75871B979C0}' />
    </worksheet>
    <worksheet name='Sheet 13'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sample - Superstore' name='federated.12mves90rfesfm10lk2rh19tvhz1' />
          </datasources>
          <datasource-dependencies datasource='federated.12mves90rfesfm10lk2rh19tvhz1'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column-instance column='[Order Date]' derivation='Month' name='[mn:Order Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.12mves90rfesfm10lk2rh19tvhz1].[mn:Order Date:ok]'>
            <groupfilter function='member' level='[mn:Order Date:ok]' member='1' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.12mves90rfesfm10lk2rh19tvhz1].[none:Category:nk]'>
            <groupfilter function='level-members' level='[none:Category:nk]' />
          </filter>
          <slices>
            <column>[federated.12mves90rfesfm10lk2rh19tvhz1].[mn:Order Date:ok]</column>
            <column>[federated.12mves90rfesfm10lk2rh19tvhz1].[none:Category:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{A925971B-D919-4DFE-8365-C373D932958B}' />
    </worksheet>
    <worksheet name='group1'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sample - Superstore' name='federated.12mves90rfesfm10lk2rh19tvhz1' />
          </datasources>
          <datasource-dependencies datasource='federated.12mves90rfesfm10lk2rh19tvhz1'>
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sub-Category (group) 2]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Sub-Category]' default='&quot;Other&quot;' new-bin='true'>
                <bin default-name='true' value='&quot;Art, Envelopes, Fasteners and 2 more&quot;'>
                  <value>&quot;Art&quot;</value>
                  <value>&quot;Envelopes&quot;</value>
                  <value>&quot;Fasteners&quot;</value>
                  <value>&quot;Labels&quot;</value>
                  <value>&quot;Supplies&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.12mves90rfesfm10lk2rh19tvhz1].[none:Sub-Category:nk]' />
              <lod column='[federated.12mves90rfesfm10lk2rh19tvhz1].[none:Region:nk]' />
              <color column='[federated.12mves90rfesfm10lk2rh19tvhz1].[Sub-Category (group) 2]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.12mves90rfesfm10lk2rh19tvhz1].[sum:Profit:qk]</rows>
        <cols>[federated.12mves90rfesfm10lk2rh19tvhz1].[sum:Sales:qk]</cols>
      </table>
      <simple-id uuid='{CE5B7C0D-F682-4251-A81E-56948F829709}' />
    </worksheet>
    <worksheet name='group2'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sample - Superstore' name='federated.12mves90rfesfm10lk2rh19tvhz1' />
          </datasources>
          <datasource-dependencies datasource='federated.12mves90rfesfm10lk2rh19tvhz1'>
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sub-Category (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Sub-Category]' new-bin='true'>
                <bin default-name='true' value='&quot;Accessories, Binders, Copiers&quot;'>
                  <value>&quot;Accessories&quot;</value>
                  <value>&quot;Binders&quot;</value>
                  <value>&quot;Copiers&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.12mves90rfesfm10lk2rh19tvhz1].[Sub-Category (group)]' />
              <lod column='[federated.12mves90rfesfm10lk2rh19tvhz1].[none:Region:nk]' />
              <lod column='[federated.12mves90rfesfm10lk2rh19tvhz1].[Sub-Category (group)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.12mves90rfesfm10lk2rh19tvhz1].[sum:Profit:qk]</rows>
        <cols>[federated.12mves90rfesfm10lk2rh19tvhz1].[sum:Sales:qk]</cols>
      </table>
      <simple-id uuid='{AA15AF5F-630E-43C3-8805-6247CBB3B27C}' />
    </worksheet>
    <worksheet name='negative profit bar chart drill down'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sample - Superstore' name='federated.12mves90rfesfm10lk2rh19tvhz1' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.12mves90rfesfm10lk2rh19tvhz1'>
            <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column aggregation='Sum' datatype='integer' default-format='*00000' name='[Postal Code]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Postal Code]' derivation='None' name='[none:Postal Code:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.12mves90rfesfm10lk2rh19tvhz1].[Inclusions (Country,State)]' context='true'>
            <groupfilter function='crossjoin' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;United States&quot;' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:State:nk]' member='&quot;Florida&quot;' />
                <groupfilter function='member' level='[none:State:nk]' member='&quot;North Carolina&quot;' />
                <groupfilter function='member' level='[none:State:nk]' member='&quot;Tennessee&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.12mves90rfesfm10lk2rh19tvhz1].[none:City:nk]'>
            <groupfilter count='5' end='bottom' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Profit])' function='order' user:ui-marker='order'>
                <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                  <groupfilter function='member' level='[none:City:nk]' member='&quot;Apopka&quot;' />
                  <groupfilter function='member' level='[none:City:nk]' member='&quot;Asheville&quot;' />
                  <groupfilter function='member' level='[none:City:nk]' member='&quot;Bartlett&quot;' />
                  <groupfilter function='member' level='[none:City:nk]' member='&quot;Boca Raton&quot;' />
                  <groupfilter function='member' level='[none:City:nk]' member='&quot;Boynton Beach&quot;' />
                  <groupfilter function='member' level='[none:City:nk]' member='&quot;Bristol&quot;' />
                  <groupfilter function='member' level='[none:City:nk]' member='&quot;Burlington&quot;' />
                  <groupfilter function='member' level='[none:City:nk]' member='&quot;Cary&quot;' />
                  <groupfilter function='member' level='[none:City:nk]' member='&quot;Chapel Hill&quot;' />
                  <groupfilter function='member' level='[none:City:nk]' member='&quot;Charlotte&quot;' />
                  <groupfilter function='member' level='[none:City:nk]' member='&quot;Chattanooga&quot;' />
                  <groupfilter function='member' level='[none:City:nk]' member='&quot;Clarksville&quot;' />
                  <groupfilter function='member' level='[none:City:nk]' member='&quot;Columbia&quot;' />
                  <groupfilter function='member' level='[none:City:nk]' member='&quot;Concord&quot;' />
                  <groupfilter function='member' level='[none:City:nk]' member='&quot;Coral Gables&quot;' />
                  <groupfilter function='member' level='[none:City:nk]' member='&quot;Coral Springs&quot;' />
                  <groupfilter function='member' level='[none:City:nk]' member='&quot;Daytona Beach&quot;' />
                  <groupfilter function='member' level='[none:City:nk]' member='&quot;Delray Beach&quot;' />
                  <groupfilter function='member' level='[none:City:nk]' member='&quot;Deltona&quot;' />
                  <groupfilter function='member' level='[none:City:nk]' member='&quot;Durham&quot;' />
                  <groupfilter function='member' level='[none:City:nk]' member='&quot;Fayetteville&quot;' />
                  <groupfilter function='member' level='[none:City:nk]' member='&quot;Fort Lauderdale&quot;' />
                  <groupfilter function='member' level='[none:City:nk]' member='&quot;Franklin&quot;' />
                  <groupfilter function='member' level='[none:City:nk]' member='&quot;Gastonia&quot;' />
                  <groupfilter function='member' level='[none:City:nk]' member='&quot;Goldsboro&quot;' />
                  <groupfilter function='member' level='[none:City:nk]' member='&quot;Greensboro&quot;' />
                  <groupfilter function='member' level='[none:City:nk]' member='&quot;Greenville&quot;' />
                  <groupfilter function='member' level='[none:City:nk]' member='&quot;Hendersonville&quot;' />
                  <groupfilter function='member' level='[none:City:nk]' member='&quot;Hialeah&quot;' />
                  <groupfilter function='member' level='[none:City:nk]' member='&quot;Hickory&quot;' />
                  <groupfilter function='member' level='[none:City:nk]' member='&quot;Hollywood&quot;' />
                  <groupfilter function='member' level='[none:City:nk]' member='&quot;Homestead&quot;' />
                  <groupfilter function='member' level='[none:City:nk]' member='&quot;Jackson&quot;' />
                  <groupfilter function='member' level='[none:City:nk]' member='&quot;Jacksonville&quot;' />
                  <groupfilter function='member' level='[none:City:nk]' member='&quot;Johnson City&quot;' />
                  <groupfilter function='member' level='[none:City:nk]' member='&quot;Jupiter&quot;' />
                  <groupfilter function='member' level='[none:City:nk]' member='&quot;Kissimmee&quot;' />
                  <groupfilter function='member' level='[none:City:nk]' member='&quot;Knoxville&quot;' />
                  <groupfilter function='member' level='[none:City:nk]' member='&quot;Lakeland&quot;' />
                  <groupfilter function='member' level='[none:City:nk]' member='&quot;Lebanon&quot;' />
                  <groupfilter function='member' level='[none:City:nk]' member='&quot;Margate&quot;' />
                  <groupfilter function='member' level='[none:City:nk]' member='&quot;Melbourne&quot;' />
                  <groupfilter function='member' level='[none:City:nk]' member='&quot;Memphis&quot;' />
                  <groupfilter function='member' level='[none:City:nk]' member='&quot;Miami&quot;' />
                  <groupfilter function='member' level='[none:City:nk]' member='&quot;Miramar&quot;' />
                  <groupfilter function='member' level='[none:City:nk]' member='&quot;Monroe&quot;' />
                  <groupfilter function='member' level='[none:City:nk]' member='&quot;Murfreesboro&quot;' />
                  <groupfilter function='member' level='[none:City:nk]' member='&quot;Nashville&quot;' />
                  <groupfilter function='member' level='[none:City:nk]' member='&quot;North Miami&quot;' />
                  <groupfilter function='member' level='[none:City:nk]' member='&quot;Orlando&quot;' />
                  <groupfilter function='member' level='[none:City:nk]' member='&quot;Ormond Beach&quot;' />
                  <groupfilter function='member' level='[none:City:nk]' member='&quot;Palm Coast&quot;' />
                  <groupfilter function='member' level='[none:City:nk]' member='&quot;Pembroke Pines&quot;' />
                  <groupfilter function='member' level='[none:City:nk]' member='&quot;Pensacola&quot;' />
                  <groupfilter function='member' level='[none:City:nk]' member='&quot;Plantation&quot;' />
                  <groupfilter function='member' level='[none:City:nk]' member='&quot;Pompano Beach&quot;' />
                  <groupfilter function='member' level='[none:City:nk]' member='&quot;Port Orange&quot;' />
                  <groupfilter function='member' level='[none:City:nk]' member='&quot;Port Saint Lucie&quot;' />
                  <groupfilter function='member' level='[none:City:nk]' member='&quot;Raleigh&quot;' />
                  <groupfilter function='member' level='[none:City:nk]' member='&quot;Saint Petersburg&quot;' />
                  <groupfilter function='member' level='[none:City:nk]' member='&quot;Sanford&quot;' />
                  <groupfilter function='member' level='[none:City:nk]' member='&quot;Smyrna&quot;' />
                  <groupfilter function='member' level='[none:City:nk]' member='&quot;Tallahassee&quot;' />
                  <groupfilter function='member' level='[none:City:nk]' member='&quot;Tamarac&quot;' />
                  <groupfilter function='member' level='[none:City:nk]' member='&quot;Tampa&quot;' />
                  <groupfilter function='member' level='[none:City:nk]' member='&quot;Thomasville&quot;' />
                  <groupfilter function='member' level='[none:City:nk]' member='&quot;West Palm Beach&quot;' />
                  <groupfilter function='member' level='[none:City:nk]' member='&quot;Wilmington&quot;' />
                  <groupfilter function='member' level='[none:City:nk]' member='&quot;Wilson&quot;' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.12mves90rfesfm10lk2rh19tvhz1].[none:Postal Code:ok]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Postal Code:ok]' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='28540' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.12mves90rfesfm10lk2rh19tvhz1].[none:Region:nk]'>
            <groupfilter function='member' level='[none:Region:nk]' member='&quot;South&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.12mves90rfesfm10lk2rh19tvhz1].[none:State:nk]'>
            <groupfilter function='level-members' level='[none:State:nk]' />
          </filter>
          <filter class='categorical' column='[federated.12mves90rfesfm10lk2rh19tvhz1].[yr:Order Date:ok]'>
            <groupfilter function='level-members' level='[yr:Order Date:ok]' />
          </filter>
          <slices>
            <column>[federated.12mves90rfesfm10lk2rh19tvhz1].[Inclusions (Country,State)]</column>
            <column>[federated.12mves90rfesfm10lk2rh19tvhz1].[none:Region:nk]</column>
            <column>[federated.12mves90rfesfm10lk2rh19tvhz1].[none:State:nk]</column>
            <column>[federated.12mves90rfesfm10lk2rh19tvhz1].[none:Postal Code:ok]</column>
            <column>[federated.12mves90rfesfm10lk2rh19tvhz1].[none:City:nk]</column>
            <column>[federated.12mves90rfesfm10lk2rh19tvhz1].[yr:Order Date:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.12mves90rfesfm10lk2rh19tvhz1].[sum:Profit:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.12mves90rfesfm10lk2rh19tvhz1].[none:Country:nk] / ([federated.12mves90rfesfm10lk2rh19tvhz1].[none:State:nk] / ([federated.12mves90rfesfm10lk2rh19tvhz1].[none:City:nk] / [federated.12mves90rfesfm10lk2rh19tvhz1].[none:Sub-Category:nk])))</rows>
        <cols>[federated.12mves90rfesfm10lk2rh19tvhz1].[sum:Profit:qk]</cols>
      </table>
      <simple-id uuid='{F5B2B3C5-833F-4704-B513-156355A33745}' />
    </worksheet>
    <worksheet name='nested sort'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sample - Superstore' name='federated.12mves90rfesfm10lk2rh19tvhz1' />
          </datasources>
          <datasource-dependencies datasource='federated.12mves90rfesfm10lk2rh19tvhz1'>
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Segment]' role='dimension' type='nominal' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Segment]' derivation='None' name='[none:Segment:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.12mves90rfesfm10lk2rh19tvhz1].[none:State:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.12mves90rfesfm10lk2rh19tvhz1].[none:Segment:nk] / ([federated.12mves90rfesfm10lk2rh19tvhz1].[:Measure Names] / [federated.12mves90rfesfm10lk2rh19tvhz1].[none:State:nk]))</rows>
        <cols>([federated.12mves90rfesfm10lk2rh19tvhz1].[none:Sub-Category:nk] * [federated.12mves90rfesfm10lk2rh19tvhz1].[sum:Sales:qk])</cols>
      </table>
      <simple-id uuid='{115D736C-C22C-4DF0-9E13-3EA38DA2723F}' />
    </worksheet>
    <worksheet name='profit map drill down'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sample - Superstore' name='federated.12mves90rfesfm10lk2rh19tvhz1' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.12mves90rfesfm10lk2rh19tvhz1'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.12mves90rfesfm10lk2rh19tvhz1].[none:Region:nk]'>
            <groupfilter function='member' level='[none:Region:nk]' member='&quot;South&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.12mves90rfesfm10lk2rh19tvhz1].[none:Sub-Category:nk]'>
            <groupfilter function='level-members' level='[none:Sub-Category:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.12mves90rfesfm10lk2rh19tvhz1].[yr:Order Date:ok]'>
            <groupfilter function='level-members' level='[yr:Order Date:ok]' />
          </filter>
          <slices>
            <column>[federated.12mves90rfesfm10lk2rh19tvhz1].[none:Region:nk]</column>
            <column>[federated.12mves90rfesfm10lk2rh19tvhz1].[none:Sub-Category:nk]</column>
            <column>[federated.12mves90rfesfm10lk2rh19tvhz1].[yr:Order Date:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.12mves90rfesfm10lk2rh19tvhz1].[Longitude (generated)]' field-type='quantitative' max='-8827830.7720750142' min='-10554693.943126809' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.12mves90rfesfm10lk2rh19tvhz1].[Latitude (generated)]' field-type='quantitative' max='6707897.5459757904' min='2568157.2140656356' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.12mves90rfesfm10lk2rh19tvhz1].[sum:Profit:qk]' />
              <text column='[federated.12mves90rfesfm10lk2rh19tvhz1].[sum:Profit:qk]' />
              <lod column='[federated.12mves90rfesfm10lk2rh19tvhz1].[none:Country:nk]' />
              <lod column='[federated.12mves90rfesfm10lk2rh19tvhz1].[none:State:nk]' />
              <geometry column='[federated.12mves90rfesfm10lk2rh19tvhz1].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.12mves90rfesfm10lk2rh19tvhz1].[Latitude (generated)]</rows>
        <cols>[federated.12mves90rfesfm10lk2rh19tvhz1].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{30519882-6FAB-44BC-A567-418D08898B6D}' />
    </worksheet>
    <worksheet name='sorting '>
      <table>
        <view>
          <datasources>
            <datasource caption='Sample - Superstore' name='federated.12mves90rfesfm10lk2rh19tvhz1' />
          </datasources>
          <datasource-dependencies datasource='federated.12mves90rfesfm10lk2rh19tvhz1'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='string' name='[Product Name]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Quantity]' role='measure' type='quantitative' />
            <column datatype='string' name='[Segment]' role='dimension' type='nominal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Product Name]' derivation='None' name='[none:Product Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Segment]' derivation='None' name='[none:Segment:nk]' pivot='key' type='nominal' />
            <column-instance column='[Quantity]' derivation='Sum' name='[sum:Quantity:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.12mves90rfesfm10lk2rh19tvhz1].[:Measure Names]'>
            <groupfilter function='level-members' level='[:Measure Names]' />
          </filter>
          <slices>
            <column>[federated.12mves90rfesfm10lk2rh19tvhz1].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.12mves90rfesfm10lk2rh19tvhz1].[none:Segment:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#69aaa5' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.12mves90rfesfm10lk2rh19tvhz1].[none:Category:nk] / [federated.12mves90rfesfm10lk2rh19tvhz1].[none:Segment:nk])</rows>
        <cols>([federated.12mves90rfesfm10lk2rh19tvhz1].[none:Product Name:nk] * [federated.12mves90rfesfm10lk2rh19tvhz1].[sum:Quantity:qk])</cols>
      </table>
      <simple-id uuid='{143BF91B-A866-40AE-B364-3FA49FF91230}' />
    </worksheet>
    <worksheet name='sorting 2'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sample - Superstore' name='federated.12mves90rfesfm10lk2rh19tvhz1' />
          </datasources>
          <datasource-dependencies datasource='federated.12mves90rfesfm10lk2rh19tvhz1'>
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Segment]' role='dimension' type='nominal' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Segment]' derivation='None' name='[none:Segment:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.12mves90rfesfm10lk2rh19tvhz1].[none:Segment:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.12mves90rfesfm10lk2rh19tvhz1].[none:Segment:nk]</rows>
        <cols>([federated.12mves90rfesfm10lk2rh19tvhz1].[none:Sub-Category:nk] * [federated.12mves90rfesfm10lk2rh19tvhz1].[sum:Sales:qk])</cols>
      </table>
      <simple-id uuid='{F35925DA-5C29-4BC6-97D4-BB0C2BFB8196}' />
    </worksheet>
  </worksheets>
  <windows saved-dpi-scale-factor='1.25' source-height='58'>
    <window class='worksheet' name='Creating Bar Chart '>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0st0xpm04fk1i41dyjn5h16ihx8x].[none:Region:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.0st0xpm04fk1i41dyjn5h16ihx8x].[none:Ship Mode:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0st0xpm04fk1i41dyjn5h16ihx8x].[none:Region:nk]</field>
            <field>[federated.0st0xpm04fk1i41dyjn5h16ihx8x].[none:Ship Mode:nk]</field>
            <field>[federated.0st0xpm04fk1i41dyjn5h16ihx8x].[yr:Order Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{0053A221-FF07-44D0-B847-61E8CA933780}' />
    </window>
    <window class='worksheet' name='Creating Line Chart '>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.12mves90rfesfm10lk2rh19tvhz1].[none:Forecast Indicator:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.12mves90rfesfm10lk2rh19tvhz1].[:Measure Names]</field>
            <field>[federated.12mves90rfesfm10lk2rh19tvhz1].[none:Product Name:nk]</field>
            <field>[federated.12mves90rfesfm10lk2rh19tvhz1].[none:Region:nk]</field>
            <field>[federated.12mves90rfesfm10lk2rh19tvhz1].[yr:Ship Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{52BC8028-9D60-4D02-9A30-E6C2B320E6F3}' />
    </window>
    <window class='worksheet' maximized='true' name='Creating Grid Table or Table Visualization'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.12mves90rfesfm10lk2rh19tvhz1].[none:Category:nk]</field>
            <field>[federated.12mves90rfesfm10lk2rh19tvhz1].[none:Country:nk]</field>
            <field>[federated.12mves90rfesfm10lk2rh19tvhz1].[none:Customer ID:nk]</field>
            <field>[federated.12mves90rfesfm10lk2rh19tvhz1].[none:Segment:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A597D1CB-2DFC-43A8-9E3C-1038CC66CAE9}' />
    </window>
    <window class='worksheet' name='Creating Line Chart 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.12mves90rfesfm10lk2rh19tvhz1].[:Measure Names]&#10;[federated.12mves90rfesfm10lk2rh19tvhz1].[none:Forecast Indicator:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.12mves90rfesfm10lk2rh19tvhz1].[:Measure Names]</field>
            <field>[federated.12mves90rfesfm10lk2rh19tvhz1].[none:Forecast Indicator:nk]</field>
            <field>[federated.12mves90rfesfm10lk2rh19tvhz1].[none:Row ID:ok]</field>
            <field>[federated.12mves90rfesfm10lk2rh19tvhz1].[yr:Ship Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{4C99FD1C-B20E-43C9-A434-D2FAAB251AD5}' />
    </window>
    <window class='worksheet' name='sorting '>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.12mves90rfesfm10lk2rh19tvhz1].[none:Segment:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.12mves90rfesfm10lk2rh19tvhz1].[none:Category:nk]</field>
            <field>[federated.12mves90rfesfm10lk2rh19tvhz1].[none:Product Name:nk]</field>
            <field>[federated.12mves90rfesfm10lk2rh19tvhz1].[none:Region:nk]</field>
            <field>[federated.12mves90rfesfm10lk2rh19tvhz1].[none:Segment:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{26FEAC89-286C-4036-BA2B-6940B77A5AE2}' />
    </window>
    <window class='worksheet' name='sorting 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.12mves90rfesfm10lk2rh19tvhz1].[none:Segment:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.12mves90rfesfm10lk2rh19tvhz1].[none:Segment:nk]</field>
            <field>[federated.12mves90rfesfm10lk2rh19tvhz1].[none:Sub-Category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{FECC7389-1846-4C27-821F-C32AD272190E}' />
    </window>
    <window class='worksheet' name='nested sort'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.12mves90rfesfm10lk2rh19tvhz1].[none:State:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.12mves90rfesfm10lk2rh19tvhz1].[:Measure Names]</field>
            <field>[federated.12mves90rfesfm10lk2rh19tvhz1].[none:City:nk]</field>
            <field>[federated.12mves90rfesfm10lk2rh19tvhz1].[none:Country:nk]</field>
            <field>[federated.12mves90rfesfm10lk2rh19tvhz1].[none:State:nk]</field>
            <field>[federated.12mves90rfesfm10lk2rh19tvhz1].[none:Sub-Category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{DE6D3C92-9642-4A9D-99FD-6F6D8300EB17}' />
    </window>
    <window class='worksheet' name='profit map drill down'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.12mves90rfesfm10lk2rh19tvhz1].[yr:Order Date:ok]' type='filter' />
            <card param='[federated.12mves90rfesfm10lk2rh19tvhz1].[none:Sub-Category:nk]' type='filter' />
            <card pane-specification-id='1' param='[federated.12mves90rfesfm10lk2rh19tvhz1].[sum:Profit:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.12mves90rfesfm10lk2rh19tvhz1].[none:Country:nk]</field>
            <field>[federated.12mves90rfesfm10lk2rh19tvhz1].[none:Region:nk]</field>
            <field>[federated.12mves90rfesfm10lk2rh19tvhz1].[none:State:nk]</field>
            <field>[federated.12mves90rfesfm10lk2rh19tvhz1].[sum:Profit:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C90E1D04-2085-40F8-9236-D2FEEA4AAD32}' />
    </window>
    <window class='worksheet' name='negative profit bar chart drill down'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='30'>
            <card type='columns' />
          </strip>
          <strip size='30'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.12mves90rfesfm10lk2rh19tvhz1].[yr:Order Date:ok]' type='filter' />
            <card pane-specification-id='0' param='[federated.12mves90rfesfm10lk2rh19tvhz1].[sum:Profit:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.12mves90rfesfm10lk2rh19tvhz1].[none:City:nk]</field>
            <field>[federated.12mves90rfesfm10lk2rh19tvhz1].[none:Country:nk]</field>
            <field>[federated.12mves90rfesfm10lk2rh19tvhz1].[none:Postal Code:ok]</field>
            <field>[federated.12mves90rfesfm10lk2rh19tvhz1].[none:Region:nk]</field>
            <field>[federated.12mves90rfesfm10lk2rh19tvhz1].[none:State:nk]</field>
            <field>[federated.12mves90rfesfm10lk2rh19tvhz1].[none:Sub-Category:nk]</field>
            <field>[federated.12mves90rfesfm10lk2rh19tvhz1].[sum:Profit:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{B8C2652B-67F4-4D66-B1D9-23357C2DBB8E}' />
    </window>
    <window class='worksheet' name='group1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='30'>
            <card type='columns' />
          </strip>
          <strip size='30'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='128'>
            <card pane-specification-id='0' param='[federated.12mves90rfesfm10lk2rh19tvhz1].[Sub-Category (group) 2]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.12mves90rfesfm10lk2rh19tvhz1].[Sub-Category (group) 2]</field>
            <field>[federated.12mves90rfesfm10lk2rh19tvhz1].[Sub-Category (group)]</field>
            <field>[federated.12mves90rfesfm10lk2rh19tvhz1].[none:Region:nk]</field>
            <field>[federated.12mves90rfesfm10lk2rh19tvhz1].[none:Sub-Category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{8C78341B-1FEA-4CFA-AD5B-0945C3F72ACE}' />
    </window>
    <window class='worksheet' name='group2'>
      <cards>
        <edge name='left'>
          <strip size='128'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='24'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='128'>
            <card pane-specification-id='0' param='[federated.12mves90rfesfm10lk2rh19tvhz1].[Sub-Category (group)]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.12mves90rfesfm10lk2rh19tvhz1].[Sub-Category (group) 1]</field>
            <field>[federated.12mves90rfesfm10lk2rh19tvhz1].[Sub-Category (group) 2]</field>
            <field>[federated.12mves90rfesfm10lk2rh19tvhz1].[Sub-Category (group)]</field>
            <field>[federated.12mves90rfesfm10lk2rh19tvhz1].[none:Region:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{FE12A27F-2CC5-4A49-BC8C-88500CA897AF}' />
    </window>
    <window class='worksheet' name='Data Hierarchy '>
      <cards>
        <edge name='left'>
          <strip size='128'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='24'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0st0xpm04fk1i41dyjn5h16ihx8x].[none:Category:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0st0xpm04fk1i41dyjn5h16ihx8x].[none:Category:nk]</field>
            <field>[federated.0st0xpm04fk1i41dyjn5h16ihx8x].[none:Segment:nk]</field>
            <field>[federated.0st0xpm04fk1i41dyjn5h16ihx8x].[none:Sub-Category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{042B1647-F3D6-40F1-BA8C-226A9BFB9E82}' />
    </window>
    <window class='worksheet' name='Sheet 13'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.12mves90rfesfm10lk2rh19tvhz1].[none:Category:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.12mves90rfesfm10lk2rh19tvhz1].[mn:Order Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{9DC2451A-0FA1-4369-A489-AF28462D2C2B}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Creating Bar Chart ' width='192'>
      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
      LwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='87' name='Creating Grid Table or Table Visualization' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Creating Line Chart ' width='192'>
      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
      AABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Creating Line Chart 1' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Data Hierarchy ' width='192'>
      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
      AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Sheet 13' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAFaklEQVR4nO3bWW/aWByG8RcMGGOIISRt00k1Gs18/w9UadRWbbOU1eCwmMVzUTWzMDNq
      GyhN3+d3hc5F/EfiyfExolQURSHAVPnYAwDH9KAAsizb1xzAUTwogM1ms685gKPgFgjWCADW
      CABHttHvL1/qzZu3Wm///4Fk7/ZK43Si+SL/c63XkySlw5HWksbDkbZfcPXKV0wM7FGhsNHS
      s25dt++vNFmslcSBVquVonpD42ymWrWmny+f6ea2pxeXgYbDpaZpX+UwVqNW1tXNB6XDoX47
      7WgxmyrNxorCWP1BX/VmIi0zNZO2Bv2B6q2OfnlxcX91dgAc3Xa7VZpmiqKqzp9dSNtC52en
      yhdLnSQdBaVCKgfqnHbVbkVar3IVQahO0pIkBfWWkmbj4+tqqOfPL7SaTT+ut2LFrbaaYaBK
      1FTSavzt2qWHfBGWpqmSJHnAWwcKDXofVGucqFmvaK1AgTYaDCfqtGp6fT3S5U8XqteqWi6X
      CquBlmspn09VBKHCaqDtOtc836rTSbTOcwXVijbrrWbTVJWoqWpQUq1a1Xg0UDVqKY7C+6sT
      AL5bnz6apVLpYNfgDIDv1iE/+J9wBoC1+x0gy7Iv/mZ3NpvtfSDgW7oPoNlsftUf4AyAx4xb
      IFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgj
      AFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgj
      AFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgj
      AFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgj
      AFgjAFgjAFgjAFgjAFgjAFgjAFgjAFjbCeAum2q+zI8xC/DNVf65cHtzo6he06r9RNt1rrAe
      ajwa6ez8XOloqEoYKzmJVTrGtMCe7ewAtXqkJ0+7mo166k2XGg/66nZPdXv9TstNoGwykopj
      jArs384OML+b6N3VRhfnHVU2oWrrqa6vbxTHDfX7QzWazWPMCRxEqSiKz/t/vs01ztZqnzTu
      l9I0VZIkh5oNOLidHeA/lWtqn9QOOArw7e2cAZbzTL3BWPP54n7tLstUFJKKrWZ/WQceu50d
      4O2rV4qfXmq+WOhuOtZiU1KwXalcknr9vkphU42ofoxZgb3b2QFaJx11Oyeaze90c32j+d1M
      W0mTyUTnT5+ozPNP/EB2doD22ZkqpbLOTrvqtGLNcqkV11WtBOoPhjptd44xJ3AQn/8U6F/w
      FAiP3c4t0AN6AB6dnQBub681HqcqikKT8VjrzUb5cq7FMtckHWu12R5jTuAgds4A69VKKk/1
      +u1Us2yiKG5pnS903m7q/YeRouZMv/78/BizAnu3E0C1VlcrrihdrRU1YnXbiRZ5pDAsK4oa
      6na458ePg0MwrPGDGFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgj
      AFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgj
      AFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgj
      AFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgj
      AFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFj7A4yfXL1AReQuAAAAAElF
      TkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='group1' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAgAElEQVR4nO29Z3Cc2XqY+Xydc6MDgEbOgcgEQQw5JGeGc2du9r1X15ZkyWWvS2lVq90q
      uVzSbtVW7erH7nqD/MP2Vq1lSSXLu7KufHUVbk4zHGYSBIlIIufcSJ3jF/YHpr8hhmFIACRC
      91M1xUGn73zd5z3ved/zBkFRFIUcObIUzWEPIEeOwyQnADmympwA5MhqcgKQI6s5cQKQTqfJ
      2fXPRpZlUqnUYQ/j0Egmk7v+PnEC8CKTPxgMIoriaxjN0SSbFwhZlnf9feIE4EVIJpNZPQly
      fEJWCoDBYEAQhMMeRo4jgO7wLi2xOHKPB0OT+MNJDPZiPvfF9yi2CayM93KtZ4SopKO+6x3e
      aClD2ZzixkyKd7tOgZJi8NrPSJacpbuu4KWvnLMTcmQ4RAFIEUmY6Hr/mxQ5DfhHPuTmgwW+
      dNbGwMNlzn31H1NqDPPhT68xW+yjXJZIfbxvj60+ZCzo4PPnPXu6slarzWmAHMChCoCJho52
      BEFAkZIkEgo2p4VUeAnF0Uixy4ROMNFQ62F+cZ3yop13pUJzXL25yIWvfgWncW87OEVRsk4D
      RKNRxsfHWV1dRaPRUFNTQ21t7WEP69A5RAEQEFCQ5TRD13/EbKqIy5cLUdbm0dm96D9eoQ1W
      O9qtNAqwNvwRf/LASN2Fz1Ni/mTyp1IpdULLsowkSc+9siiKJJPJrPEExeNxBgcHCQQCFBQU
      IEkSY2NjOJ1ObDbbYQ/vtSJJEvF4XP37EAUA4sFleq7fgoo3+VJrCQYBQoIGMRZH+nhwYjyG
      qNECUNjyDudLRT7onWK7qQKX4WMhMRjUz0ylUuj1+uduceLxOCaTCZ3uUG//tTEyMkIkEuFL
      X/oSer2edDpNIBBgYmKC7u7urPkeYOe3N5vN6t+H6AUSGX3Qg6H+Ld5qLebjuYze6oXIIpGk
      hCKl2Fhbx+bJIzOdnSUtnK9S+PD6MFFxb9sYSZKyagu0srJCcXExRqNRfcxgMLCxsZE1WvBZ
      HJ7opxYZ7FvHowzz4SIgaCisauNUeRHleQ/58Kc/xSbEiJpq+HyZDTY+fp+gp6j1Laqu/pD7
      Iy4utZbysubsZ2mIk4ZGo3niAAjIqu/gWRyeAGgLee8fvk9S/nglFgRseWYErYFT5y7j9a8T
      l/UU+AqxakB2lXG+Zee1glZP67l3Caa0e7r04zZDNlBeXs7ExAQ1NTVYrVbS6TShUIiSkhL0
      ev1hD+9QEU5aQsyL2ADBYBCr1Zo1e99EIsHAwACLi4t4vV7S6TTJZJLLly9jsVgOe3ivlU/b
      ANkxAz7Fp7+Ek47JZOL06dPk5+ezurqKXq+npaUl6yb/08hKDRAOh7FYLGi1e9tCHWdkWSad
      Tu8yiLOJnAYAIpEIRqMxKwUgg6IoJBIJEokEGo0Gm82Wld9HVgqA3W7Pyh/7cWKxGLdv3yYY
      DKLT6SgrK+PUqVNZtTWELBWAYDCIwWDIWiGQZZnJyUmcTifNzc0kk0lGRkYIBAK8/fbbWfW9
      ZKUAuFyurPqRP00gEGB9fZ3Lly+r34PZbObGjRv4/X6KiorU14qiyNLSEqFQiLy8PIqKik6U
      9+zk3MlLsLW1RX5+ftYKQTAYJJ1O77p/k8mEyWRibm6OvLw8zGYzgUCAW7dukU6nMZlMTE1N
      YTKZuHDhAna7/RDv4ODISgFwu90nahV7WTIOgIwDcHNzk/v37xMMBonFYoTDYVpbWxkfH8ds
      NnPu3DnMZjPRaJT+/n6GhoZOTAxRVmaEbW1tHbsYGFmWCQaDLC4usrq6uq/xFxQU4HQ6mZ2d
      ZXl5mRs3brC+vo7NZuPixYs4nU6uXr2K3++nubkZt9uN2WzG6/XS3NyM3+9ne3v7AO/u8Dj+
      IrwHjpsGkCSJ8fFxpqamSKfTaDQavF4vra2tOByOl/48nU5HdXU1N2/eRJZl4vE4Ho+H06dP
      U1hYiMfjYWtri1Ao9ESohNFofKGQ8+NCTgMccWRZZnp6mrGxMWpra7l8+TLnzp0jFovR09Oz
      5/vweDy89dZbGAwGioqKuHz5Mj6fD0EQ0Ol0uFwuRFFkbW1NDaSTZZnl5WVMJtOJySM4Psvg
      AXKcNEAymWR6epqqqirq6+vRaHbWrPb2dm7fvs3q6iqlpaUv/bkajQa3201hYSGBQGCXQSxJ
      kur1GRkZIRqN4nK52NzcZHFxkfb2dqxW64Hd42GS0wBHHFEU1QmYmfwANpsNg8FAOBze1+dX
      VVURiUQYHh5mc3OTzc1NhoeHiUQidHV10d7ezubmJgMDAwSDQU6fPk1lZeWJCaU+HsvgAXOc
      NIBer8dqtbK1tUVpaakqBJFIhFQqtScb4HHcbjfnzp2jv7+f+fl5YCdZ5ty5c3i9XvLz8ykp
      KUGSJHQ63YnLpTges+CAOU7nAEajkZqaGoaGhjAajfh8PpLJJAMDA9hsNgoLC/f1+RqNhqKi
      IhwOh+rZcblcu7Y4JzlwLiujQWOx2LEKhsuELkxMTJBMJtFoNBQWFtLa2vrSxmguGjQXDXqs
      NADsrNK1tbX4fD4ikQg6ne5YbeOOMln5DR7HyaPRaHA4HPve8+fYTVZ6gba3t0/MQU6O/ZGV
      ApCXl3dstj85Xi1ZKQDBYDCnAXIAWSoADocjpwFyAFlqBEcikazOCHsdKIqCKIpq8J7BYNh1
      kn0YiKJIIpEAUH//rBSAw64IEY/HWV9fR5Zl3G43drv9RJ2uAqyurjI+Ps7W1hYGg4Gamhqq
      q6t31XF9nYTDYYaGhvD7/Wi1WoqKijh16lR2HoStra3hdrtfe1U0RVFYXV1lYGBgV6O65uZm
      KisrX4tQvuqDMEVRWFtbo6enB7fbTVFREYlEgsnJSYqLizlz5sxr1wTBYJC7d++i1Wrx+Xxo
      tVrm5uYwGAzZqQFMJtOhrLiRSISenh6Ki4upqalBo9GoAmEwGCgtLT32miCdTjMyMkJ+fj5n
      z55Vz1vsdju9vb1UVVXh9Xpf65imp6dJJpN84QtfQJIkzGYzJSUlfPDBB9lpBB9WbdDMqpPJ
      ssrLy6O+vp7CwkImJiZe+3heBalUikAgQHFx8a7DRo/Hg8lkYmNj4znvfjX4/X58Pt8ujZ/J
      cMtKDaDT6Q5NA1gsll0/hEajwW63s7m5eSDXSKfTLC8vqyHUBQUFT91aybLM1tYWGxsb6PV6
      SktLD2RblEmo+XQ/XlEUkWX5UIrxGgyGJ8ajKAqpVCo7BeCw+gO43W5GR0eJxWI4nU51LOvr
      63g8e+t39jhbW1vcu3ePZDKJXq9nfHwcp9PJ+fPnMZlMu167vr7OzZs3MZlMyLLMyMgIp0+f
      pri4eF+Lg9lspqKigvHxcex2O3l5eYiiyMjICMCeknf2S01NDT09PSwsLGCz2ZBlmcXFRba3
      t7PTCN7a2sLhcLz2eKBYLMZHH32ExWKhoaEBrVbL/Pw8CwsLnD9/nsLCwj1PPlEUuX79Ooqi
      0N7ejtlsJhgM0tfXh8/no729Ha1Wq+YADw0NUVxcjMfjUSfo2toaX/rSl5Blmfn5eVKpFAUF
      BXi93pcyXBOJBPfu3cPv92Oz2Uin00iSRFdXFyUlJXu6v/2QTqcZHx/n4cOHWK1WBEEgFovR
      1taWE4DXiaIoRKNRBgYG1Fxbh8PB6dOn8Xq9+1p5l5aWuH//Pm+++SYej2en+aCisLS0xL17
      93jnnXdwuVzIsszs7CwTExN8/vOfV68ZDoe5evUqTqeTjY0N1U8eiUQoKSmhs7PzpbZIsiyz
      vr6O3+/HaDRSWVl5qMk0iqKwvb3N4uIiBoOB4uJi7HZ7dm6BZFk+lC2QIAjYbDbOnj1LOBxG
      URSsVuuBeKXS6TSwuwm4IAiYzWZEUdyVAppOp5Fledc1M9lei4uL1NXVqRoqEAjQ29vL1NQU
      jY2NL6wJMjkL+03YOSgEQVDLu2R9PsBh9wk2GAwHsud/nIxNsb6+rh6sSZLE0tISdrt9Vy8A
      p9OJwWBAFEVVCwaDQcLhMA6Hg4aGBrXym8VioaamhpmZGWpqak5cIs2hCoCUThBYneT6g3nO
      v/dlCq2gKDLhlXGuXOthM22h+53P0VTqQgws0recorupGhCZ7rtDKK+B09X5L31dURRPXIsk
      p9NJRUUFw8PDJBIJHA4Hfr+fubk5Ojs7nxCAgoIC7t27R0lJCclkkvHxcTQaDTqd7omtodFo
      JJ1On7jvDA5ZAGb6r/Jow4wYXyb5sYYW49vcujlI4+VvUm3c5Ic/u4L181+jKB1jK7Tjykps
      TNI3F+edRteervv4NuGkoNFoaG5uVmt4JhIJ7HY7p0+fpqKiYtf9Zhpl3717l97eXnQ6HZWV
      leTl5dHT08P29ra6TRBFkeXlZTwez7FLInoRDvWOihvPUW6xc+O74+pjiegysr2eynwreo2V
      lpoxlhe3KPp4oZcSfnpujtJ08Yu4LXsbfiKROJHtgXQ6HXV1dZSVlSGKIgaDAaPR+FRhN5vN
      vPnmm6RSKdVWEASBxcVF7t+/TyAQwGg0sry8TCgUoru7+1gED4qiyPr6OvPz80iShM/no7S0
      9JkxSIcqABa784nH5EQcrdOHXrPzo5mdebAdRwG2pu7z7SkteQ3nacr/xK/9uHqWZXlXnM3T
      0Gg0qiF4EtFqtepk/fR3oSjKrlyIzMTIGMktLS1MTU0xOTmJKIo4nU46OjpwOp2f+b0eNpni
      AWNjYzidTjQaDQ8ePGBxcZHCwkKcTidWq3XXodjR02mCgJxKk9ltyuk0srDjebAX1XPKnWRo
      dYOYWINFtyMkj69M6XT6M096MyG6r+JUMnPCOjU1RSwWw+v1UlFRcWRyeTNC/6x71+v1tLa2
      0tjYiKIo6HS6Q3cavCh+v5+xsTHOnj2Lz+cjGAzS09PD4uIiKysrGI1G8vPz6erqUu//yAmA
      3uJCCa+QEKux6iC0sY6xqAWBOHqLndr2ToToz/iwd5b3u6swatjlmhMEAY1G89wfzOFwoNfr
      X0lU4vz8PA8ePMDpdGKxWJifn2dpaYmLFy8eGSHIfEfPImMM7wVZltne3mZzcxOdTkdJSclr
      8xwtLS3hcrnUiM+hoSHMZjNOp5NAIEBrayuDg4NMTEzQ1NS0c5+vZWRPJcH82CwRSWZ1I4R2
      YgSpyEuJtxiPbpCbd+/j0wYY28rnvTccsL228zbBRHX3ZVY++ClDMzbO1OS/dKf4UCj0ShJi
      IpEIg4OD1NfX09DQgEajIZlM0tvby8DAAG+88cYLx8NnmtjF43EEQdg5tDniRmgqlWJ4eJi5
      uTm0Wi2JRIKRkRE6Ojr2HWLxIjx+trG6uko0GuX8+fMsLCwQCoWoqKggHo8zOTlJRUUFdrv9
      MKNBJSKBAIFAgMrmc+hT24SjCRSdmTNvvUOpRSGqLeDdz3Xj0gvo7YW01uzEkWgMVs6eP4/L
      tLfhO53OV2LQra+vIwgCZWVl6PV6tFotFouFqqoqNjY2iMfjT32fJEmsrq7y8OFDpqenSafT
      rK2tcePGDa5cucJHH33E/fv3iUajBz7mg0JRFGZnZ5mfn6e2thaTyYSiKGxtbXH37l22trZe
      +Rh8Pp9a1j0ej6u20PLystr2KWMDZGyeQ1xSrDS9ce7pT1ncNJ1273pIa3ZSqh7gCZjyiqjJ
      29uVA4HAKymMpSjKS69yiUSCu3fvsrm5icViIZ1OMzAwgCRJVFZW0traSjqdZnR0lJs3b/LO
      O+8cWlbV80ilUkxOTlJYWMj8/Dx2u52LFy+STqfp6+vjxo0bXLx48cAPAB+nqKiIqqoqrl+/
      jt1uJxwO8+GHH5Kfn09DQwOKoqgHhZlt2dHWqa+IV9Ukz+v1IooiKysr6mlsOp1mbm4Ol8v1
      RAtSSZIYHR0lEolw7tw5nE4niUSC69evAzuZYpn3WCwWrl+/zsrKChUVFQc+9v2iKArJZJJI
      JIIsy5w5cwar1Uo8HsdisbC9vc309PQrFQCdTkdrayt2u53Z2Vk1LNvr9RKLxZiammJubo6O
      jg41OjYrBeBVlUZ0OBy0tbXR19fH6uoqVqsVv98PwMWLF59YuaPRKHNzc5SUlDAzM8PGxgYm
      k4lUKoUkSfj9fnWy22w27HY7GxsbR1IAtFotbreb5eVlysvL1RU2GAwSiUTwer2vJRnGYDBQ
      X19PfX09qVSK0dFRJicnGRkZwWazcerUKaqrq9XXZ6UAvMrSiBUVFVgsFiYmJtje3lbVciZW
      53FkWUYURWZnZ3G5XNTU1BCJRNjc3FQjOTc2NtDpdHi9XhKJxJFtTJE5hNvY2GBra4ulpSVE
      UWRsbAy3e2c7+7q3bpnsu4qKCkRRfGrQYVYKwEFrAEmS2NraUtV9fn4+Pp/vM98TCASAndX9
      woULanKKTqdjZGSEubk57HY7oigyPDyM0WikvLz8QMZ8EEQiEQKBgBppWVxcTFdXF/fu3eP6
      9euYTCa1Id/ExAQXLlx47WPUarW7Fp9POyKyUgAOUgMkEold8f2Zevvt7e3PXPGi0SiDg4Os
      rq4Sj8dJp9Pcvn2b6upqIpGI2qgic2KtKIoqHJmw5+chSZJ6apvxRh2kC1KWZVZWVujv71e9
      KSaTiY6ODrWJR19fH6lUiu3tbba2tjhz5gwFBQUvdR1FUUin04iiiFarfSUxXHtOiBGTUSan
      piiva8OiB5BZHx8m7jtFueP1531meJGEmMXFRfLz8/d9QCNJEvfv32d9fZ22tja1ycTQ0BCl
      paW0tbU9oWUkSeLOnTuEw2Gqqqp49OgReXl5bG9vqwFssVgMSZJoaWnBZrOh1WpxOBxqRYnW
      1tZnjikajTIyMsLKygqKoqjdJDPhzQdRFmVtbY2bN29SV1dHSUkJsiwzMzPD8vIyb7/9Nnl5
      eUSjUdbX11EUBY/H89K1j2RZZm5ujqmpKcLhMFarlZqamn2XjzmQ/gCKLJOMBOi5cw1HSRMG
      K6CILDz4AbOt1ZQ3H54AvAgHpQG2t7dZXV1VVz5BENTT3sHBQSoqKtT9b4aNjQ02NzfVFTEQ
      CBAKhaisrGRubo7m5mYePHiAwWCgrq5O/bESiQRarfa5vc0ynSNTqRR1dXVoNBoWFha4ffs2
      b7zxxlPtkL0wOTmJ0+mkublZPVG22Wxsbm4yOztLR0cHVqt1z/ZK5kxhYGCA0tJSqqur2d7e
      ZnBwEEmSqK2tPbBT/D3NgtB8P9/667/jzvAUU0sRzHpATjA7n+Q3Lx/9XdVB2QDxeBxZlnE6
      nbuysJxOJ+l0+olKBLAzSWGnTo5er6elpYVbt26ptWsy8fwul2uXkAaDQQKBAE1NTc8cz+Li
      IsFgkHfffVcVxMrKSn7yk58wPT3N6dOn93W/GcLh8BMpnDqdDrvdTigU2vfnR6NRRkdHqaur
      U0MWZFnGarUyPj6Oz+c7sLCSPc1Wg6OA5rbTbCYEms6cxW4Ag83Dr1ZWUFJw9DOG9qsBtre3
      mZ2dZWVlhUQiwerqqrpVURSFzc1NjEbjE35/QG1pFAgEsFqtRKNR9Hq9GqHpcrno6upieHiY
      K1euUFxcTDqdZn5+nvLy8ufuo/1+P16vd1eot8FgwOfzqe7YgyAvL4+trS1kWd4VdRoMBikr
      K9v350ciERKJBMXFxepKn0mxHB0dJRQKHa4AmN2lvPluAbWt3bgLSjAc/TDxXexHAwQCAa5f
      v45Op8Pj8aAoCoODg4iiSHFxMZubmzx8+JCqqqqn/khut5v8/HwGBwdZX19ndnZWDeG2WCyE
      QiFsNhvd3d2Mjo4yMzODVqulvr6e6urq5wquXq8nGo0+kbmVKZNyUGS6zA8MDFBWVqY285Yk
      6UC8VFqtVo2jepx0Oo0gCAd6fvPSRrAsiUwP3SblakC7NYY/svv5ytbzlOUd3jboVTbJSyaT
      3Lx5E7PZTGdnJ3q9nlQqxf3795mfn0en02EymaioqKCpqemZkzWZTPLgwQNmZmbQaDRYrVaq
      qqqoqamht7cXRVE4d+4cOp1ODV9+EU/O+vo6165do6WlhZKSEgRBYHNzk56eHrq7uykvLz8Q
      I1hRFDY2Nnjw4AHRaFTd9nV0dOByufbtqRFFkZ6eHmKxmGpPxONxBgYG0Gq1nD9/fs8CvW8j
      WJHS3P3xXxBq+jVMQ3/B3YXdz3/jd7sOVQBehL1qgEgkwvb2Nk1NTeoEMplMnDp1ivX1dSor
      K6msrMThcDzXSDMajRQUFOD3+2ltbVW9JBqNhsrKSnp7e4nH42pSx4vidrvVkN+pqSkEQSAc
      DtPc3KwGgx0EgiCQn5/PpUuXCIfDqvH/6eJbeyUT0nDz5k1u3LiB2WwmkUig1+t58803D1Sb
      vfRM1Wj1vPOrv4fTW8J2++/zKyVVGI/ZFuigT4Iz8fWZep8v+h6tVovH4zkw74xWq6Wurg6f
      z8fy8jKyLOPz+Q5kVX4aFovllaWW2mw23nvvPVZWVggEAjgcjifqjR4EL+1LktIJbvzsb1n0
      b3Hto58QTCgoyif/HQf22iTPZrPhcrmYmZkhmUyqoQwLCwuqALwo+fn5atmSTN3MRCLB7Ows
      Ho/nqQb0i5BZjRsbG2lqasLtdh+LbK5Pk6kxWlZWRmtrKxUVFa+ksNbL2wBigr//o/+F/m0b
      gdUZ6tvfxPbYgWfn53+F1qLDC9d9ERsgEolgNpv3bARfu3ZNNYIjkQjBYJDu7u6Xrns5MzPD
      gwcPcLvdWCwW1tfX0Wg0rzR7LNcoe582gEZr5L1f/A0KBoa4citMWUUlzse+S6f56FdcD4fD
      e84Iy8vL49KlS8zOzrK5uYnNZqOtrU0N85Uk6ZNkC53uuemZ5eXlWK1WJicnCYfDlJWVHan8
      4ZNIJmw7k++851AIKZVgfm6cwJqfkdlljHnlnH2zmzKXhcPUuC+iAcLh8CtpkxSLxRgdHVX3
      3/n5+bS2tqq+//0gyzLBYJBgMIher6ewsHBP++Fs1gCZAmDz8/OIorhTQ3WvAqBICe78/Z/w
      vf4wDQ2VRJZGmYwV8/u/9+sUWY+2G3R1dRW32/2Z4bmSJKmrhcFgeG61iXg8rrruKioq1DAE
      QRDo7u7e16qeqd48Ozur2lpOp5P29nZcrpcrDpatAiDLMj09PaytrVFdXa3WPNrzTE1HQzxc
      S/Gbv/svqXIbQE5w+8//NT0LSb7eeLTdoGaz+TPdi7FYjJGREZaWlpBlGY/HQ0tLy1MnnCiK
      TExMsLy8THd3txqwVV1dzY9//GOmpqb2HIaQOWSampqipaWF/Px8UqkUg4OD3Lt3j3fffffI
      J8sfBTY3N1lcXKSzs1NNiKmurt67AAhaHQ6HBf/MGJElEDQKEa0du/542AAmk+mZEyccDtPf
      308ymaSxsVFNrL5//z4tLS1qHf9MCZDJyUmWl5cRBIHp6Wm2traora0lLy+PgoKCfXV/SSaT
      TE1NUVNTQ01NjaqB2tvbuXXrlpqBleP5bGxsYLVad7mcdTrd3qtC6K0uvvn1bxBdHOajKx9x
      t3cU94V/zDvVB3MYcpiMj4+TSqW4dOkS9fX11NTUcOnSJfLy8ujr61NfFw6HuX37Nk6nk5aW
      FgwGA11dXVgsFm7fvs3W1harq6svHQf/OBlX66dLHGbqGr1IfkCOHbdz5iAzQzqd3rsGkFJJ
      xsYXaXvvm7xt1CFoNAga4aVr9BwGn3UQ9una+RkyUYkZwuEwoiji8/kwm82sr69z/fp1PB4P
      oVCIK1eukJ+fT01NzZ7HajKZKC8vZ2JiAqfTidPpVFMNFUU5lI4rxxGPx0NNTQ2Dg4Nq3dOV
      lZW9C4AiRvno239K/j/6H/mlM6+/79N++KxQCJ/Px9zcHDOLa8xupEiLMnUlTpaWlnZNuIxR
      nEwmycvLo7Ozk4mJCaanp5FlWU2K2c9paSYQLhgMcuPGDRwOB+l0mlQqRVdX14GFH5x0BEGg
      paUFs9nM3Nwc6XSa/Pz8vXuBZDHF3OAH/PUPh2i6/D7VHjMC4C2rw2s9vNiIlw2GUxQIRBL8
      6O4EA5NraDUCnfWFbPhXuT6ygV6joAFioobTFVZ+4xcu4c5zqCVP7ty5QyqVor29HYvFQiQS
      oa+vD4fDwdmzZ/edjhgMBpmYmGB1dVX13pSVlVFXV/fMys/PI1u9QBni8bh674Ig7F0DiIkw
      H37/O4xMp+kbHcJsMiIA3/yX/5Yvnzrapce3t7fJz89Ho9GyEYzy5z8e4O7IEkVuG5W+PL5/
      e5JkSsJuNtFUIFDiMqC1evn+/WWG5wO8lbfj0tTr9bS1tXHnzh1u3ryJ0WhUKze0trbuyzuj
      KArhcJi7d++STqcpKioilUqxvLwM8NzJL4oifr+f9fV1tT/XXoTlpLKrluyeNIAiEVidZ24j
      Tn5JBUVu65HZ+7+IBohGo5hMJoLRFH/4V7d4OLOuPmc16UlLMqm0hMdhRlYULrSU8Sufa+Uv
      fj7I3GqQ//U33931+ZkmEuFwGKfTic/n27drMhMSHI/Heeutt9QIyEyK43vvvffU2KNEIkFP
      Tw/r6+tPbJdKS0tzGmDf4dCKzGzP9/jj/+/7rMY1WN0l/PJv/S4XapyHegL8MgSDQRRBw3dv
      jjEyu1OsyW42kO+yMrOyTWZJqC/z8MU3avmj7/ZS5LFhNekJx5+ska/T6Q7cFSmKIhsbGzQ0
      NOwK/82ETmcO8x5HkiTGxsYIh8NcvHhRNZgfPXpEX18fXq/3SJZVfBqSJLG2tsbq6iparZay
      sjLy8vIOvKL3ywtAOsGNG7187nf+FZ9r9DB75+/4ztXrnK78Kod4APxSOBwONoIJbg4vICsK
      Rr2WknwH82sBjHodoiQjSjJmg576Ygf1hSb+9soAgiBQ4jYRjUYPJLzhs8icNTxO5iT4aRMh
      kUgwPz9PQ0PDru6MDQ0N+P1+lpaWqKqqeuXj3i+Z3OiZmRny8vLUxhctLS3U1tYeaAjLS09Z
      WZYRbBZqfF5AwFvZTN7YHURxL592OGwFgvzswTLrgZ1qy6IksxGKkRJlJElWmxoYtYQAABqy
      SURBVHOMzPn5T9+7yfzKJlsxKPXaqM/X0NPTw9mzZ9VSI68CvV5PSUkJc3NzFBcXY7FYUBSF
      hYUFYrHYU92fiqKorZEeJxOUd1zODObm5pifn+fSpUs4nU4URWFxcZHBwUE8Hg9er/fArrWn
      KRteGuM7f/GnOI2Qjm4xNDFHIpHGqIWzX/5ntBcfXTUryTKPluL8tHdW3epIssJGIPbEazeC
      UW7GYkSSUFvq5ne+0U2xx6KGN3R0dLyycWq1WhobGwmHw1y5cgWPx0MqlSIQCNDe3v5UDWQw
      GHC5XCwvL1NaWqraIZubmyQSiQOdOK+S6elpSktLd2mx8vJyVTAOVQAErZ66xg6G1sKEUwB6
      6mpqScXCpICkeLSTYrZDCX5we4K0JOF1WtgKxZEVBYfFQCj2yf7eatIjShKyrFBd7Oa3/sEZ
      Knw75U98Ph9ra2vqaxUFtsNxbj9c5NHsOlaTnndOV1Jb6kav1e7ZNrJYLHR3d7O4uIjf78du
      t6sBcE8z8vV6PadOnaKnp4dbt25RVFREIpFgamrqqTWKjiqP9y/OkMmge15dpL3w0gKg1Rt5
      71f/Be8d6DBeHxuhGIvrITQaDbHEzoQXBHZNfotJTzwpoqBQkm/mt7/WSW2JR53I6XR6l2G6
      GYrxH757n4X1EPWlHrbCcf7wr27xi28388U3amAfPjKz2UxdXR11dXWf+VpBECgsLKS7u5ux
      sTEePnyIwWCgqamJysrKJ06yjyo+n4+VlRWam5vV7Vw4HGZra2tXZeeD4Jjs2vePJMvcH1vh
      z37Yj6woICnEJBmNAAICOp1AWpRpKPdyus7H31wbQYtMhS2BJhUkkdipcra9vc3KygpnzpwB
      IC1KfPfmGOFYiv/5v3obl8OELCtcHZjjWx8M01ZbQIn39Sa4FBQU4PF4EEURQRCOXV/kzMl3
      pi6SJEksLCxQXFx8oMn9cCQFQCEVXObGtduspW1cuPwO5S4T6bCfsfU0zVUlCMisTg6zZSyh
      qfzFGi6sbUX54+89YCscx2rSE03sGISysnNNWVTQagTO1BcxsbhJKi2h08ByCG7d6aHAu5Nb
      GwwGaWhoUNMf40mR/olV3j9bg8/zyb78TH0RP++d5sH46msXgEw+7XENk3Y4HHR3d/Po0SNm
      Z2fRarVUVVVRW1t74G7cI/cNSYkg135+A8+Zy3QZ1vnJz36O9itfwhMPsLCWpLmqhGRwgTtD
      83S/1/jCn/vjnkn8gSgXWst4q7WUP/5BPxvB3aWyJVnh21cegiDwZksZ73ZWkhZlrj8YZXYq
      wPtnq2lvb//4FHnHDamgICs7wvM4giCgEQRk+WjbREcVm83G2bNnX6ou0l44csH7iegqKXMV
      jWX5OIqbaK8QmF8MfvICOcLwzV4KT1/C53jx1WDRv1OzsjTfQV2Rnd/+B5101BaqE9dqNlCa
      78Bk1NFRW8h/+81uOuuKyLOZsNqcDK1B0uClsLBwlw/ebNDTUO6lZ2SJWOITN+Pk4hbLm2Ha
      avYeCv2ixGIxdc+fqch83MmUmslosle1hdP+wR/8wR+8kk/eI/HNKZaSPhoq8hAQSCa22QoZ
      KHJKDI+Mszozyaaric+1lpJZdCVJQpZlZFlGkiQSiYQaApDpCDgwtca8P4QsybRUOCnMM3Gx
      vZL+KT/b4QS/dKmG3/56F1f6ZrnYVo7LrOH//dkw3/pgiJQoEY4lGZnbxGnRUeS2EgqFEASB
      WCxKhc/J9YFZfto7w9JGmKv9c3z/9hjvny6jq75QHUMikUCSJLV8YSQSQRAEQqEdozwYDKLV
      al/431AoxOrqKjdu3GBjY4ONjQ1mZmbU435RFJ/4HhKJBKIoqv/F43FEUSSZTD71tZIkEYvF
      Dmy8mWJdsBOSIsvyax1DMBhEp9OpYzhyWyAQQFHUw6id1Wxnpmu0BvS6BFJKQkZB+5h35fEV
      4tONswVB4GJbObceLTOxuMWf/XSUYreF9XCSudUApV4775yuRKvR4LabWduK8FEkwujcJv/d
      N7uJpyT+44/6CceS/NmP+mmqysf4sUrWarX43Gb+m2+c5eajFR7NrmMxGfivv9ZFY4lTvf7j
      Dby1j713P//G43H6+/uprq6mvLycQCDA9PQ0k5OTKIqi9ip+/HvQaDRqN8vHxyQIAolEQq15
      VFhYiNfrVRNvDnLcn/438/lP+90ef+4gr5X5e8/h0K+K6OYYV+8EeOeL3Vi0MHbnB2y7L9CR
      t86VqSRf7K5m+IOf4C9+k7eafeg/pRmfFQyXSkv8zbUR/vb6KInUJ77ktupCfv2rnVQUOoEd
      781//FE/Wo2GN1vKyLOZ+PaVh5gMOnweGzMrAS61lfNrXzmNxbi3En2ZSM9QKKTWF9pLub/h
      4WEWFxe5ePEiy8vLDA0NYbPZSCaTBINBmpub1Uy1DI8Hw2VaOyWTSWKxGI8ePcJoNKLX6wmF
      Qng8Hrq7u/dcpOsociANMl4lJlsR5vQAw5NFVBo2GVzUcandCeGPIzY1Vk69eZGFn99kxvse
      dT77C3nZ9TotX7/YQGm+gw97J0Cjo722kAst5XicmVIuAueaStkIxPjLD4a5PjhHMiXh89j4
      1fdaKXBZ+Xff6eHOo0Xaagp5q/3luzVKksT09DTj4+NqtWOXy0VbW9uuPgOPk2kVlClHntkT
      p9NpdDodoVCIoaEhWlpaKCsrY3JyUk3Msdvt1NbWPvG5yWSS/v5+1tbW1G2Hw+HgwoULGAwG
      wuEwvb29jI2N0dra+krayh4FjpwNoNEZKCnxMD/cz+iazBuX36LYpgdFRtGZ8DrtaI0WilwG
      VoISRV7HLgGQJOmpHgNB2BGC8kInHdUePtdVQ1NlARaTftdJrU6roaoojwV/iOmVANVFLv6H
      f3KB+jIPs6sBPuqfpSzfyaI/xNsdlS91b4qiMDc3x+DgIHV1dbS0tFBUVMTa2hqzs7NUVVU9
      EeSW6SLZ19fHo0eP8Pv96HQ6HA4HkiQxNTVFJBLBYDDQ1tamNthzuVw4nU5WVlZ2CYCiKMiy
      TDgcZnJyko6ODrWPbyaOyOfzqaEWU1NTlJeXH5so0s9CFMVd2vbIaQAQMNiLuPj5r+56VGfL
      p9H2yWtshTV0Fj7x5hcikUg8N03RZNDxtYsNTC5tkUiJ9E2sEk+m+fn9GTrrfOj1WuZXg898
      /6dJpVIsLi6ysrKC3+/H7XZTW1ur/hB6vZ7r16+ztLS0qwewoiiMj48zNjZGeXk51dXV+P1+
      ent71YYRhYWFLC4u4nA4mJubY3V1lWQySUdHBwsLC88MHdjY2KCtrY2SkhKi0SgWi4XS0lKm
      p6cpKyvD4XCojTuO2C75QDlybtDXwWfVBRIEgVPl+XzlfB3zawH+88+HuNI3y+XTlfziO80M
      T/tprnox92YikaCvr4++vj6SySSJRIKVlRXGx8fVAr1msxmTyfREe6FgMMjk5CTNzc10dnZS
      W1vLG2+8QVVVFcPDw6TTabq6uqipqWFzc5Ph4WE0Gg1vvPEGdrudlZWVXQFljxOLxXA4dlI7
      vV6vWgAskUioHpilpSVcLteJWf2fRlYKQKYL4/MQBLh8uoo3W8vR67S0Vhciywr/5jt3KXBZ
      +dyZF4urn5qaYnl5mbNnz9LU1EReXh42m42RkRG1c3osFlP7ATxOpo9wpg4R7BwIlZSUEA6H
      icVimEwm2traqK6uRhAErFYra2trXL16FZ1OR319/VPHZbFYdhKDFAWXy0VlZSUTExPATq+x
      GzdusL29TXNz84HW4z9qHMEt0Ksn08/rs3BaTfz6l0/zgzsT3B9bQZZlmirz+eZbp8jPe7EO
      iJmev319fep5RTqdRqvVMj09jaIoPHz4EJPJRHFx8a73ZkIZPh3Hn0ql1DZCsJMffObMGcbH
      x1lYWECSJAoKCmhqanpmSUav18vdu3eBnYZ9ZrNZLQE5Pz+veoDy8/Nf6D6PK0fODbpfXiQn
      eHl5+aXSA8WPc4QB9DoNOu2zKz4/jiRJfOc730Gr1dLR0YHRaGRpaYnp6WnVGDOZTHi9Xtra
      2p7opZtKpbh27Romk4nW1laMRiORSIQHDx7gdDo5c+bMrnifzEGgoiiqgHx6nBkBFASBgYEB
      VlZWVOO3vLycxsad8JJnvf+4c+TdoK8Dp9P5Um49nXZn0r8s6+vrJJNJHA4HpaWlGI1GfD6f
      mrrY2tqK1+vF7XY/dZthMBhob2/n7t27qiBEIhEsFstTq05oNJoXzpk1GAx0dnayvb1NMpnE
      arV+Zmunk0hWaoClpSXy8/NfuXE3NDTEzMwMZrOZeDyuhvbOzc0hCAJf+cpXPrNolqIopFIp
      FhYWiEQiuN1uCgoKiEajSJKExWLBarW+8EqdqwqR0wC4XK59H+xk1o3Mv5mj+8cxmUxoNBpa
      W1tZWVlRKxw4HI5dPXafhyAIGI1GamtrgR2DeWhoiMXFRSRJwmq10tDQQFVV1YnbrrwOslIA
      DqJTfCQSYXR0lLW1NbRaLRUVFVRXV+8qVVhRUcGjR4+YmZnh1KlT1NXVsbm5SV9fH01NTS+t
      gSRJ4s6dOySTSbq7uzGZTKysrDAwMACQE4I9kJUCsN8ukeFwmHv37pFIJCgrK1P7A4TDYbV/
      MOzss7u7u+nr6+P69etotVqSySQVFRV7mqx+v59QKMS5c+dU16jL5VJLqBcXF+dqhb4kWSkA
      +9UAY2NjxONx3n//fXUVr6io4OrVqxQVFe0qklVUVITb7WZpaYl0Oo3X68Xlcu3J2MxUNc4c
      YMGO4VtQUKAWfM0JwMuRlQKwXw2wtrZGcXHxri2Mw+HA7Xazurr6RJU4o9F4IMncVquVdDpN
      LBbDbDYjCAKKoqiCsbW1xdjYGJIk4fP5KC4uPtGHWAdBdvm8PmZra2tf5TWeVp5DURQkSXql
      ebiZLc7AwAAbGxsEg0GmpqaYnJxEEATu3btHMBgkHo/T29urhl/keDY5DbAHKisrGR0dpbKy
      EofDgaIoLC0tEQwGaW9vP8CR7kan03H27FkGBga4deuWug1yuVysr6/T1dVFcXGxmnV1/fp1
      7HY7jY2NOeP4GWSlAOzXBqiqqiISiXD16lXcbrfawrS5ufmVF59yuVxcvHhRjeN3Op1MTU0h
      iiLFxcWqf9/j8VBaWsrs7Kx6upvjSbJSAParAYxGIx0dHRQWFqq+/fb2dtxu92tJHNHpdLtq
      g2ZCHz69ymu12mNRCOswyUoBOIhzAJ1OR1lZGWVlZQc4sr1RWFjI3NwcoVBIrZuZSqVYWlo6
      8EJSJ42sFID9aoCjRlFRERUVFdy4cYOSkhK1ravNZqOhoeGwh3ekOTmz4CU4CA1wlMi0arLb
      7czOziJJEkVFRTQ0NLyWPgbHmawMhnu8Sd5J4mk/5bPCoXPBcDtk5TnA9vb2Z2aEHUcer0H0
      tOC8HE+SlQLwsvkAOU4uWSkA4XD4RGqAHC9PVgrAi+YE5zj5ZKUAZLKpcuTISgH4rLpAObKH
      rJwFmSJQOXJkpQAct55ZOV4dWSkA6XQ6pwFyAFkqAK+q31SO40dWCoCiKDkNkAPIUgHIkSND
      VgpALk4mR4asFICT3vQhx4tzyAKgIEbXGRx8RDj5yWPp6Ab9d67z0Y1e/JEUAGIswOzKBooC
      KDJbS9PM+UPP+uDn8lnh0jmyh0MVAP9kL3/3g+vc77vNdmLnMTkV5d7Vq2xr8yiyxrj689ts
      phTEiJ+R2RUAxMQWPT39pNlbPE8qlcppgBzAIQtAWrDz/te+RoXjk8kYj6wQkIvoPt1Cw+lL
      tOQHmJx/rB+XEmf89k2M9RepKnixJhWfxmg05jRADuCQUyJLap4s1yHGthEcPky6nQlq9+az
      EQyhOCAZ3mTk/gYTSglfPFWgrv+PVz7IdEF8HpmMsGwUgsz3k63BgJkCZhleqwAEZx/w8/sz
      WPLKOHepG9fTiiMroNF90gNeo9Oh+Xi7Et9c4tGmhLHyPMbHdJcsy7vKlYui+NzJnWkHdFwn
      QTqdZnl5mVQqhcvlwu12v3BwX+YM5Lje+345VAGwFTXy7rtVaLQGrM+4stZkRQpukpLLMWkg
      tr2FYKlCIEleZRufP11Mz8+ucm+ugM5yJ1qBXRUeFEX5TCN3c3MTi8VyLLsfrq+vqyUPNRoN
      ExMTlJaW0tbW9kL3k9GOx/HeDwJJknbd+2u1AbRGy04DZ4cV3TOubLIVoQlPMOMPk9qeYXAq
      TkmpS31eY/Rw5mIncz1XWQntre6l3W4/lgkx6XSa3t5ejEYjFy5c4O2336ajo4OlpSWmpqZy
      RbD2wCHaAJv85D99j4WUiCSmmfovf0phbSfvXurgrctdfHjlu9xJW3nzc+9RZtchyVbyP94z
      6fMqePdskOGZZYo7ql5aikOhEAaD4dgJwdLSEqIo0tbWRl5entoWNR6PMz09TUVFxWe2XMqx
      m0MUAA9f+Gf//OlP5dfw1V+q2fWQJq+ErrzMXwLuynbe2uOV8/Lyjt3kh52SHjqdbpcBLwgC
      NpuNZDKZtfv6/ZCVJ8H7LY9+WLjdbhKJBNvb26rRL0kSKysrOJ3OrN3X74esrAx3XEsjer1e
      vF4vfX19pFIpzGYzS0tLLC8v09nZmROAPZCVleEWFxfJz88/ltXRkskko6OjzM7OIooiDoeD
      xsbGFy7Sm6sMt7syXFYKwHEvjShJklrZwmQyYTKZcn2CX5Bcn2COf3HcTK/hHPsnK43g42oD
      5Dh4slIAjqsXKMfBk5UCkNMAOTJkpQDkNECODCfOC5ROpz8zJkYUxawujSLLctaWhvz0vZ+4
      fcCLdEYXBAGdTpeVk0CWZURRzNpDs2QyucsFnH0zIEeOx8gJQI6s5sTZADlyvAw5DZAjq8kJ
      QI6sJicAObKaE+cG/TSKLLE61c/w9AaO0kY6Gsox6gSCq9NEzWUUO/VAgrGBCXyNzTiNx39N
      mOn7kEfL8Y//cnHhy+fJQyG4OkXf8DQ4SjnT0YDdGGd6NExZYzF6IOEfYyJWSHNl3rFaGdPR
      dQZGl6lrasFp3glwlGKb9PX2sZ400Hr2DUrzdlyfyeAid3uGSBnzOd11+ljd5x5QiC4/4OpA
      gMqGetIzvdweX0MBgiuTLAfSKHKa5QdXGY2Y1VpEx5swM6OblLV10tnZSWdnPRYgHVvmw6sD
      eCobcKdnuHJnHAgz+WiJNJAOr3D16kPMeRaO07fgn7zH975/hb6RhwTjOymhcirM3StXiDkr
      aKmycudnV1iOSEiRZa789A7WqhYqnDGuXLl70jVAium+GRrf/YfUubVUu9L87ZVZ4k0+9RWR
      tQluT2t4/xdqMGqP00//DJIbhI3lnCsr4vH0+I2pPgyNl2mu86CpdpH87hWg++NnFSYGe9FU
      n6bGqT9WAqAYPVz+chN9N36oPhYLrhPUFfJ2cy0WnUB06yfML2ygZR6hooUztWUooofV1asn
      XQBibISdNLt21KLW4cUdmyUCyGKClYVJNjdGqT//RewnRRfG0mxvD/Gf/2QIrdFKWUMXb5+t
      JbARprDZvaPytQ5KfTEAkmE/kw8+YHS7mC9+oQKOWXhIYVk1cjqx67G0GMGo96D/eEFz2N34
      ExEipHHZdvIoBK0ej9540gUAFEGLurALGrQCKIAipdleX0EXFqkxG4/dD/9MXPX881+vByAR
      XOaj7/2QsZpaTAhoP/ki1P9Px0OsLKYRzaUYdZpjtfo/C0UAQdCoP6kgaBBQQADtJw+i1Qgn
      3QYwkWcK4g/vBMfJ0S229FasgNZop6nzIl98+xT9124QTp+M88DHy0SanD5qC2EzCnaniXV/
      CAVAjrLi34mZshXUcvGrv8Ip3Sg3+mdPRNVsvcZMMr1NWtq5l0g0gFZvwazTsh2LADsL4FYq
      efIFoLo5j/6P+ggl4oze7UdXWconNaUF3GVNdPmifHhvnpMgA4GZB1zrmyCakoj4J7k3a6DS
      C3nVzWz0X2UtlGBl9C7jVKrvETR6mjrPEH3Uw3z0+H8JFrsHbWiW8ZUwYnieobFtCou9eEt8
      BMeGmA+LhFcnmA1pTn4ohCJLzPZf4ebQEp76bt7pasCs17AxO0jI1kC114iiyDzsuYattptK
      z/GurKbIaab7r3NncBbJnM/ZS2/TWGQHFDZn+7lycwjFU89773ThNkcYvLdFw9kajIqCHJvj
      2v0Y3ReasByLdOkoH37rL5mOfPKIq7KdL7zVhSm5woc/u8JSzMzFL3yJWq8ZAYX4xiQ/+skN
      4uYSLn/+3ZMvADlyPI8TvgXKkeP55AQgR1aTE4AcWU1OAHJkNTkByJHV5AQgR1aTE4AcWU1O
      AHJkNTkByJHVnPho0GwiHljh4cMxwikNjoJymhvLMWmfvsbFNqbAW8PxDvzYPzkNcEJQovP8
      5R/9EbengoipCA8/+jGPNtPPfP36ox+z8RrHd1TJaYATQmi6n945G7//e1+nUgN84eMnpChD
      d3uY34qgtXho7TxNSd4nHVKkVITJwftMrEZxljRwvqMarZxisv8uEyshjK4yOjubcJk/u+Tk
      cSSnAU4I1sIyXPI0P/jubfyBCGlRRlGA6ArjS3EcbjdbD3/Kv//2DT5ppqowdu2v+fu7izgd
      ega/+8f88FGI+Ox1/sO37yA4XIgrY4yuhA7vxl4xOQE4IegKTvPf/0+/g2v1Fv/uD/93/u2f
      fo/1pAiOStqqTGwsLpIQZWZHxvlkOm/xwfc+JCamWVreRKtscfXmQ5JSimAgjKi10/2lb3Cu
      2nOId/ZqyW2BTgiKomAvauJXfquR0NoIf/6H/4bv9p7lHzlu83//zQK/8AvvUGyN0uN/3C6I
      EgrrKaqoo7nGAc3NfDG/ArtXw7/4NQsP+j/gX/3td/jCb/wOn2ssOLR7e5XkNMAJIbgwzI37
      j4iKYLJY0Qoa9Hot2/OjUNxOV1sDeilCMvV474QCTjVYmF4JUtnYRGOVj3Q0Rmh5Drmkg1/+
      td/my6dEbt2fP7T7etXkNMAJwWy1sj70ff6v730LWTBQfPaX+Hq7F2v8Fym/8+/5P/7Pfrrb
      iqmp1KEF9DYvGky8/09/m9BffYf/7Q9uY3EV8YVv/DJFOplb3/5/+NZ6BMFazC/8k9rDvr1X
      Ri4jLEdWk9sC5chqcgKQI6vJCUCOrCYnADmymv8f5iE2b78KjQkAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='group2' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='negative profit bar chart drill down' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='nested sort' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAgAElEQVR4nO29V5AcR5rn+YuIzEgtKktrrVAoaC0LIAiSoGo9Lbd3Zne6+87s5mHO7MzO
      1tbszPbM7uXu1mxvd7anr6en51orYthUTYKQBS0KKBSqUBIorVXqyAx1D1UkQRAAQUKQYMbv
      qTIyvgjPKP+Hu3/++eeCaZomFhYZiCAIgvhZF8LC4rPEEoBFRmMJwCKjsQRgkdFYArB4otE0
      jVQq9antLQFYPNEkEgkWFhY+tb0lAIuMxhKARUZj+6wLYGHxMNEjN/nFT35G53gSd24VT3/5
      K2yqL0AW7ny+JQCLLwza3DX+r//4n/F/4z/wv20tIjFynYv9vUQqC8hx3NnGEoDFF4bk7BSD
      M17+enMZHocNT81anqu5t401BrD4wuDOL6W5KsVv/5/fc3VwinA8hfExkW6CFQxn8SQTiURI
      JBIUFBQAoEdH+PPv/8SVGxNorlL2v/QyW1aW4rjDq14QBMESgMUTze0CADBNHSU8zYVDv+BX
      p2X+/j/8j9TnyB+xtaJBLb5QKOEZBgaHUVRwBnKpqi/DnoyRDk9ypbOH+biGrqYY6m5ncCYG
      WINgiy8QaniE439+mwXTi100iM3NsPqFr1AeaeXl//0o/8t/+r9pKQjzy//jf0b70v8JWGMA
      iyecW7tApq4SW5xjZjGKZoDs8pOXn4tbD9M/GSOvoAivTWdmfAQzUERh0G2NASyebO40Brhf
      rDGARcZjCcAio7EEYJHRWAKwyGgsAVh8oYhP9tHW0UskfX/nW/MAFl8g4nS3tnHVVNEDJWws
      c3+shdUCWHxh0GZH6HaU0LKygsjQEClj6biuRBkdusGNG0PMRpfWD5tqArBaAIsvDDpTYzPk
      FOSTly3RPT5KPFWHwyVx8fQFRmJxHICr1GRfc4jOE62AJQCLLwimmmJ8IUZ+eRPuLBNnso+Z
      WJKQy0midBXPVYRwSwbJlE507BrX01mAJQCLLwhpZYHB3l6cehBlyiQ6O0D7jUbqc32U1zpw
      IyIg4nYJjMxG8OWWANYYwOILgjI7QMRZRa5XRBAk8mtKiPSNEMPFYtgO70f8iLg9MkllyU1k
      tQAWTz6mylDnAPW7v8PmchkBwEwgTP+RnqktjJ9rRakqId+pEVa9rK2sxt9+HLCiQS2ecCKR
      CIn4NNHRFNnrmghJH3wXHu5gUq6hyr3AubOXWdQclK/aQHNJEEOZQ3LlWNGgFk82VjSohcUD
      cMcxQCKRYGpq6nGXxcLiE6OqKpqmkUwmP5X9HbtAhmGg6/oDF87C4lETi8VIJBLk5eV9YltZ
      loU7tgCiKCKKVu/I4vOPJElIkoTdbv9U9p/QDWqiayqqthRkIdlkbDaRu6RdfAIxMXQdVdUw
      AEEQkWU7onC3X2iiazqmKGJ7wl4YpqGTTmtIdjs2abnspommawiiDUm8+39V11SQ7EhfgH/8
      JxCAQWL2JqdOnmdkJoYu2ilr3M7ObbV8fMzdk4CJlgzTdfEUV/omUHQTm93Dqr0vsqHMdxcb
      hWvvHidWtZrtdYWPtbQPSnj8HD/76XlWfu2r7F9ZunQwFebY8VaKmnazosR/V9trb/8Bx65v
      03C3x/IEcd8CMJMLnDvZhq1yK996oQwHacLzyS/UTNrCWA99824OfPP7ZDsFEovTzKpfgNfc
      HZi/OUjNltXMTs3CewLIQO6z/pqEp4eZt+fwdEMZLpsIOMnKcwIm88NXOXbkLGNRlayyZnbt
      2kRpEDrPnGdeSTM62M9cVKd255fZt64Ybb6XNw4eZjyu4cmvpWVfC2UenTNHX6N06zepCEJs
      4BRvjufwjZ31jJx8lUspN9GBXsKajfq1mxEmO+keWSCrfgsvtazDI8S52XGOo+e7UUQPTZv3
      sX11KXK4nT9dsLMhZ5LjHWNsOPA9VuTc+VcKooBgqCSTaXSnG0+oCM/ydxPXjnHoTCfhpEGg
      rImWXdspDX34GaWjk5w7epSO4Tlkfwk7n3uW2lyZkUuHeOdcP4pho3z1Dlo2r8T/0URljw91
      nO7BIBu+toL2Vy4wrq6l6PYutKEwdPUsx851Ek4L+ArrefGFPeQ4RTQlTNfhVzgxNobgL2Xb
      3r00FnlJTPZy7Ngpbs4ksLtz2PTMAdaWBkj1v8tvOky84QEmEhLVTavwxwa5emMKKW813/rK
      DgJCgo7WI5zuGiZl2ilbuZW921bhv1te84fEfb/A49EYHk82sv22vq46y/nWbsqf+iteKvIw
      fOkIZy91ktvSiJZYZE4v5Llv/QC/OcSrv+1gbl0x6a4zSOv+iv9hTZDEwgwp0QBM0koCfdkn
      ZeppkmkNAD0dIS3X8dL39yLMnuVXv7/O7u+8xB53jDdaO4nFFZT5fm6m8vjO3+7FpkzR+tYJ
      ekq/RrOoMd7XSa+jkQNf3UGOh7sgECqqo3qkldZDb+AJ5FLZuJLmilwEwB4o5cC3txFyifSd
      P87AjREKs4o/MDcSXG+7hrf5GX74QpDYWAeHT50m+8Baeq4ssOu7P6TWbTA3N4No3Pf/55EQ
      H+whXFZHoSsXsyTClZtxiupuezCGiZxTx8v/ZjsBh8nY6T9ysi/Bl5q9GIJA0co9bH/Rx2zX
      Sd693EF57mZMe4D1+77OgRwvqZk2XjnWQ2PpJlBTJIQ8Xvja3+CI9HHw9VMUPv01fvSsyJnf
      HGdC1QjYTPxVm/nezhdxCikuH3qFzvF6tlY4H+mzuG8BiKKIYejLQUW3qHL+JkPuOvaVBrEB
      5bW1nDs5hKbq4AjRUF5LlksCQuQ4TQwgWFjJ5KFXeXN+BevXNJHvd0E6fo+7uyivryLgkEh4
      /BRml1CU50NKp3E7nYimytRoL+1nh+m6eAwAVYmzajZJcx64ssrZuGkVAad0j3uA6Ayyavt+
      SmammBgfouvon5jd8k1aGgLYiHP4jz9nIqyQjCsUbMhGv7UiJxfpH+hhuK2LVknANA1MRxaR
      xE5y8hVOvPpnZppXs6q+HLfjtmf4ODETDPSFKapdQTqlklVbxuzJHuK167hVAqZkR9amOPTb
      15iIpjCT87g3zQNeZIcfX34WNgnyq2rxDFwnkdYJ2gwun3ydV27MopMkpTYSBfyiREFFLble
      mXjSQ25JASV5ISQpidctgwCmzYGweInfv/knIqpOMq2ypigKfE4E4A8GifWMEEvpON23mAkC
      oqEvpaEW4H4iK3zVO/nb0vXMjg5y9t1X8NS0sL0p9LF2d8fEFANsPPAtdjaX8CGnzQK4Q/kE
      P6byg7mkbclBdmEZ2YVlNNb6+PXvrhCuruTI4ZusefG7fDnkYrrnLJcnbnuNmwa6v4ZvfWMP
      Bd7bdmN4/vusiC1ws7edP79ylU1PH6Au79H+Y++GFp5lYHaMscGDXF9uzA3BzfBcM43eD85T
      pgdpvTrGppe/T3nIidb3F34y+NG5IUPXMSQRuxbj0vlLCOW7+NELJUgMc/C/dHC/s0mRvvO0
      jjv58l//iIBTov/0K/Qaj34u6j59dwLunBIqnWGOn+8ikjbQ01FGb4yRCFVRkeqm7eY8qp7m
      xvVubO4AdvvdK9xUfwfjcYncykbWNJShhSMYy5U2qaRIxaa53j1ALHmffQXBTl62m75r7cwm
      NQw9xczQNUY+4eaBC1M9tF3uJ57WMXSFsZ4BjLxcXGoCRfKT5XOgJ2a53n6d+dsXXbtD1Mhz
      nLwyiKKbaEqYwb5+Iul5etqHSDuC1K9cT2m2SSJxnyu2HwGLc9PIhRv4tz/4IT/60Y/44Q9/
      SMtKP9NjMx+qrGpaRZBd+F02lIVRzl8deP870zDQVA1DT9N75Qq6O4jTBilDxB/0QTpKf1sH
      E2n1vsuVSio4fQE8dohN9dLWO/kQf/Xdue8WQJD9rN3zDPbTR/j1T46jSR6atuxnmy3Elqc2
      cfzdP/GPb6TJrVlPy85mHJKO0+PBIb8nBAlP0IcNcLgETr32C14NpwiWrWTPnjrcdpHaqjIO
      H/wJp1z51Bblke9zAWD3BHAvO50FyYk/6EFa+oDX68Ym2ciq28C+9Ble/fmPSZp2ius38NRu
      IOki6L2/EafbHSA92cqvzrxFWpDJrlzNi/sbcDh1Nlf38buf/BgpUMCKylqKZScCAi6fF0O2
      gehm1b79KO++wz/997cRHCHW7nqKQpsbEuf50z+/SdyQqd/wFLUl3o8vzCMiGo2SXbLig+cJ
      FJRUMzc5T9r04fX5cNglvFkl1Az28Yef/SO27Eo2lJWTLS6NlG1emUuv/ISjCcirXcvunc04
      PQIrawo4dOjXnDZ81K+rpCJfwwYIDi8Bc6keiDY7Pp8fm7h0d1fAhywIZNevIf/dt/nH/34c
      f3Ej9TUVpJyP3sdoRYNaPNFY0aAWFg+AJQCLjMYSgEVG80WKZLDIUJKqwWJSe/+zTRTwOj7O
      7b187qMqlIXF46JzKs7c1Nz7nwt9Mvvrs+7L1uoCZSiJxV5+/5Nf0zYyf8/zYvPdHH+3jcj9
      u/SfKCwBZCgL/Z2k/V5uDo7f8zxvqIHd+9bh/3TrTT73WF2gjCTCzb4061s20HF8mCjgA/RU
      jKHhYbLyC+lqPYlct5GGvDSDAwa1a8tY7DvLyYuDvDePHajdyvMbK1DmbtJ6so3ZpEjpqi1s
      W1GECIxcPUNU9jDU3U1MymXjts2UZ7tQw+NcunCJwek4cqCEHXu2ku/+bKqi1QJkINpELzd9
      9dQUlLLSN0bH5NIA0lQVxm+0c+KdY2jlq6krDqHFZxi6MYWKQKi0mT3797NvzxbynXY8bgfp
      hWHePXqJQN0m9u5ajdp5iBO9UQxgqOMEF24kaNiwk+a8NFeu9pHWdSKLUbxFTex9+ik2liR4
      91gPn1UPyxJAxqEy2DNGcW0JdkGmemUhA5dvvv9WTyzGCTTvZPfKMgLuW0JIBAHZ5SM7Jwtl
      6iYUNrOxvoDZ8THsefWsri8jv6ia7XtXMXnpGjHAEyhl684tVJYUUl5ajNMBpmkjK78QpzZL
      59UO+mYjJIcniH4WjwKrC5RxmMkF+m7e5NKFAa45bKBHSYgLTO+uoQDw5JdQXpB9Z1vTRJ3p
      4uKIzM59dXhsMJNWsUkORGEpHFjwBvCkF+7+RtcTXL9wlsGUm4rCAgRERjvifFbhgZYAMozw
      zCRa8Xr+7ts78DsETNPk6rHfMzg8T34JSwkA7pQEwDRJLQxx7PwMW/fsINclAibBUJDY+BgL
      8SpyXAazXdeJF9Zx13C/VJyZtETj6vVUhiQWpxOI3GstyKPFEkCGMTc9jtNfi0v+IBo0N7+Y
      ialRUkXFdzc0DXrPHeZqb5K56DSSAP6aLTzbXEnVyCjv/vmPCIIJchbb9lXiuNt1ZA+Fbo2z
      hw7S5nDjC5ooxmfnYrKiQTOMdDKGJjpxOWzLa9JMdDWFooLTYSedVrA7PMvhyqBrCooCLo+D
      VHSeqPLBqgHJ5Sfb58BQFcLhGKoh4PD48HscCEAqHkVw+ZBFMLQUSRVcThlTVYhEY2imhMvr
      xFRMXEHPp3obRyIRTvROMccHWSzudyJMEAQrOa7Fk00kEqF7bB7T88GKQr/TRmPexyfrEQTh
      zpnhLCyeJMqynBQU3D2P0b2w3KAWGY0lAIuMxhKAxRNP+uI/E//5C6RO/9dPbGsJIENJJ2e4
      fPoSo4uJe56XjEwwMvXZ+envBzM5j7EwiJmY+/iTb8MSQIYSG+ug9WwbHTfunX4kNjvA9cHF
      x1Sqx4/lBcpIUgx2jrL1uW10d0+QXleFzFI6ynAkitPtYW5sDCmr4Jb8dSZaMsZcTCU7O4iZ
      ijE9OU1E0bC7AhSX5OOyiaTDEyzobrTwNNG0QFZ+MbkBF+hJZicnmI+mkVx+iory8cgCqdgC
      4xOzKJqJ05dLSXE2dgGU6AxjE3OopoQ/p4C8kA/bI0imZwkgE4kO0pus5EBdGWpHJwMxaPSC
      noxw/copdNPDZNSkcV2Q96KCTCNN1/ljzHga2ZHlZX60n67eKQy7iBZZYDCxl30r8pjvOsQf
      buRSn2tDU2Ikbkyyt2UL+ngnZy6PIPs9CLpIWvbSVGRjtOc6fdNxRMkkFelgZvMBNpWKXDt2
      mCExiM8mYFuI41q9hizXw38UlgAyDoOpvn7cdWvxSV6a6u281TlN/ealLYYiY8PEKp/m2e21
      eGSJ2RsGSnyezuPnGPNvYPeqEmQbhIprWZ9VjimANtfBmz1T6CvyEASJiuZt7Gr0IqdmOX6h
      k7iikg5HceXWsGl9NU4JsC0FSxTVriRYoQMmkZHzXBqYYUOpj/lZgfrnt1LlcyAIJp9yA5iP
      xRJApqGGud49TdjbQWusH1IKswNtzK19lizAXVTNiqY6vI7l4aGW5OaVDoadWRz4bhFuu4ip
      p5jov8Kl66MkVR3S88zpzSQAQRDw+AM47YAqIdkkQKKooprh05c4cXwcbyBIdUMzZX6NgWvn
      6RyaRdUNtMQcel4xKSpoWJfNxdajjAaD5OSV0lBfiVd6+ENWSwAZhrI4x6LTQ1VBHm474Gug
      fKGD0ZkkWQGwSRLCrds92T00bn+B9dmjHD18Bt9zO8jSI4zMRFi5+0vUFbgQwh38y5/D97yv
      K1RGy4Fi4pE5Jrsvca5nnIKaNDfiHva9tJeQx0Zi9DR/vrh0ftmqpyhqSLI4O86lqz2MhvJp
      KH74KSUtAWQY05OjuHJWsmFDIw5xKRw6S5inb3CY9Ko7rwMAG6HqLawPH+H0ycu0bCoHVWFs
      sAdjxmS87wKzqdq739TUGe0+z815GzkhJ+GogifkQLRLGLE+bt7oZUqP0ddxibhvFzDFqTd7
      cFfk4jDiqIaALD+aqmoJIMNwZxXRkF+EvLwJniBAfkUT+qKBZPdQVlWH/5ZYZk+ogjqnH0GQ
      KF+5CaV/ElP2sWbdOq51DTCh+qnauI/csIwDEEvXUP3eRgN2N5WVVQTcduTicsKRPkaG53Bn
      r2BHUyF2B+xel+BK3xgxTy7r9h4glvBhJ0RtYxbdg6PMmDK1q7dRlvNo0slb0aAWTzSRSISF
      o/+Z7Knj2BtfwLHz7+/b1gqHtnjisbJDW1g8AJYALDIaaxBs8eQz1wfxjk9lagkgIzFRUwpK
      Ko2BiOx04ZRtd9m30kRNpTElG7JNwlAVkrqEx2nHNJfWEyeVFIgybq+L+8vJfA8MjYSi4XA5
      kO6UneJOLNwAdeDjz7sDlgAyDoP49A1OnbnE5KKCKYgUVG5ix8567ryFcoru48dYLF3FzsYi
      UlPdnJrJYv/acjB1rp88yKWhFN7sFex7aRPBBy1eYo4LbaOs2rqGrHtstPiwsASQYZjKAhfO
      XMFesYmvN5XjEFQiC0nuN9TGVbKG/SVLfxt6lPEJg11f/R6Vfunh7HzszWf3rvyHcaX7whJA
      hhGZGWPBlsWe+nJcNhFwEMxZmvmauHaUd053EVEMfEX17Nq9k8rcD1frSNdfeDO8gm826vzr
      a29ypXOM9un/Rl7+Gp7/ykrGzhzndOcIuuihYVML29dU4TBSXDr6Bp7KGjpOtZO//ik2OK7x
      ++t2cpODDM0myW3YyvO71+CL3+RfWsf4xrPbcclpek4d5cSVAZKGQH7Venbv2UjBQ0ykawkg
      w0jEYzgdIRzyRx2AjqxKXvjudrJcEjcunmDo5gglOWUfOsc0NFTNgGAlX/rm13H/9hgrv/oN
      St0ao5daGdBL+O4PXsKjzXPirXe4nJ3L5mKZ8OQgN/Qctrz4VcpyPChdl1H0ABue+yYHbBH+
      0nqFcETBJxqktfd2ezHxlazl2xufwW3T6Tj1Br03F8lvynk4rQ2WADIOSZIwTBXDMEG8pRqZ
      BqgLHPn9O0xFFJS4Qt7aAPp97lWOpjA2l6Kyrhm/LIGcS/2KQtqHp9GKi7F5QqzeuJnybCcC
      IIgSRTUNFAXdkE7hdXsQb5uSNQ07ZqyPP/38IGFFI6GoNOxYg07OQ6u4lgAyDK8/iBLtI5LU
      8Phu6fmnRzh6YoT1L32PiiwnM73naRszuO8wAUFABHT9AwtD0zAlCQEBp9uP3+u8Y9rRu6FO
      XOZIn8CB7/6AbLeN4Svv0BX7BGW6D6yJsAzDFSqm2pfkxOl2FlMGhhZjuHeYuKag4MbvkdGT
      s1xru8pc6hNcWHJSVuiit/M684qOFh2l/eoUuZX5n9o1qikKhtOHzyGizA1x6coAn6RI94PV
      AmQYgt3DqpbncJw/yu9++t9ICy5Wbn2WfHc1O1bc4E8//TH4CljdsIoKwYOIgDsYxHAttRaS
      K0iOthwuKtgI5GSzNJyQyFuxmZ3aSf70T/9Ayp7FpqcOsK7IBZqKNxji1mGH6AqSJUnvX8fv
      92G3iyA6yQv5EQWQy9exdvAv/PTHp/Dk1dHU1IQqOx9a/x+saFCLJ5xIJELi6kEKPsVEmLD3
      P1nRoBZPNpFIhMT8BAWhO0/j3QshUGolx7X4AuAMgP+Th0ODNQi2yHCsFsDiiWcuPkt8dmmb
      vQJfIR7H/S+etwRg8cTzdvfrXJw7C8Dft/yvbCjbfN+2lgAyDhNDS9J/6QQn2/qJm05WbnuW
      bWtK7rKvl8Z4xyWG5VK21Bc9khL1nHoHz9r9lHz8pi4PHUsAGYapJug4/hbX9XK+/Nf78NsU
      xgbmUeGuG9ulYossynmPrEyxhVmk+w25eMhYAsgwlIUx+qMudu9bQ5bTBngpq1/qM6vxGS4e
      P0bfTJLcmg1s39iIX779CipDl09y+towujOPnU/vozxoJxmeYngsQX5uiqMnb7Jy604KGOPU
      qTamYmmyypvZvmk12W4JTJXxrnOcuNRPWvIhplW2AKahM32jjdMXrhOXgqzZsovG0iDSI0iK
      +x6WFyjDiIYXcHpy8btue/cZcdoO/YVw3jqef/kFCpI9HD3biaLfOk2kM9N+jJNjdnY89xLP
      bMjn7JtvcDOsoibD3Lh6hkOnBmnauo3yHDeJaJyyDXt4+eUXqRSmaesaQDU0Rq+0crRPY/cL
      X+KlZ3dQ5FmaEU7OdHDk3CQrdh5g/5Zqes4coX869kifh9UCZBi6riOKLkTxttdqeICuVA3f
      3FCNC/CvXU3fmZskleoPztHCdPamWPfUNkpDHsyQj8bRUcZG5gjl6EQVOxue2UVV1lJnPphf
      xHhHF2e7FBJzUyTyczCUCDfmTTZv3Ujh8uRVwL30Hp7puUJg3TeoL3EDQdaPDnB9Ikx9/sNP
      ifgeVguQYbg9XpTUPKn0bZ3uZJKEy4lz+YVvk2UEQcA0bmkBdI0kEq73ktQKAg6XG1QNExv5
      JeXkBt8bySa4cuQwM1IulTW1VJTmIOoqpqZj2G045Y+uQUsmErhdruVoTwm3W0LVHm2ggiWA
      DMOXU0QgPceV3mEUzcQ00oRnF0nnlFAeHqR7No5uGkyPDGNKMvZbc3I6fFT40/QOTaNoBnpi
      nuGROdzZAUQEBEG4Jdx5junFPNasa6KmogSvzcQ0AZuMLRlhZHIWwzRJx2aYiy6JMb+8ione
      a0RTOlpynt5hhdzgo0mJ+B5WFyjDEF0hNm9bQ+vJ0/z28nFEUSK/YiM7dtayfl02x9/6I+cB
      myNE89YduD+0csxF9aZVDB05xW8vq4iCRGH9JuqKvBizU7fdKZvivDle/9WvcHjc+EQF3Z0L
      so/mFeUcPnGIX16w4cnOw1xujXyVGyjtP8y//qYNU5QIlKygpfiBl9nfEysYLhMxTdRUgkRK
      xUTE4XTjdNjA0EgmEqQ1A5vswuWSkQTQ0ik0bDhlG2CiKgkSigqiDZfHgywJGPrSUkm7Q36/
      W6GlkySSKUzBhsNhx0TAKcuATiqRQFENJLsDWTSQHG4kwURXlWUbCYfLjcMm3XMRTSQS4aet
      //CpJsKs3KAWTzyRSITTfa0ssLRD5M7qFkqCZR9jtYQlAIsnHis5roXFA2AJwCKjsQRgkdFY
      btCMRGd2qJuu/nFSyJTWraamNPg5qgxhui+MUrC6ieBHYpEeLlYLkGGYps50ZytvnRnAlVtE
      cYGf8Mg4ic+wTBNdJznbN3/LEZms/A9nkXhUfH5Eb/FY0BZHaO0Ms+OZ/VTetvW6no4zMTzE
      fFzFHSqitCgHh2QQmV9EM3TmZ6aIqyJ55TUUBhwYqQXG5nRs6jyz4RSenCJKC0LYRQE9FWF4
      cIRICvz5JVTkBxAATQkzOjRKJGUSLCjGoy1y7do1huwarmQ2WUXVlOWAromIj6F2WgLIMCKL
      89j9IXI8t4cY6Ay1HeHCuERuyEWsv5/pxq1sagwx1N7KlTGdopIcRGWazv4EL35lI85wD6/8
      oY/6pmKcpOnoHUHY00KlX+PaxUvMpATsqAx0d6Pue5m6kM611r8woIQIeW1E0waFPpFYMoWS
      jrIYtuHI0YE5zr7exba/O8CnW+p+/1gCyDBSSgLZ5sdmv216NX6Ti/0uWr7WQp5DIjZ6jbc6
      emiq3ARykIa11axpKMHGPEd/c44o4BQEcmvWsXtXPU5birbWiyTjCjFlmglFoLauDrdkEh29
      yOW2ISqaF+lIVPGl59bhtQtomoZkk2GhF7tjI7vXvlfd5x7b87AEkGE4nW7SWhhNNUG+RQSL
      s8wEcsh3LlUJXzALwZxB1/SlkAe3C7skADbs7/fNBWxONy7ZBqhLu8ybJvHoLGO9nSzMTi8t
      ZhEkiuqdxGcnEHLX4pOX4v/t9kc8wr0PLAFkGN5AiPTiIDPRJN7QLWMAnx9/ZIawYeIXIJVM
      YpoGgvRJR6ICssONv3IVB/Zux31LS2OMD6EPLaKaRbdUvOXvTXgvKOGTJNB9UCwBZBhyqJSW
      1cO89fbbTNZX4ZFSxGMemnbUs6m4k7ffaqWmxMfMjT5yKrfgvX3l2H0QLCwj//I7vH3iLNV5
      HtKJMEaggc2Na2m89AfePBKlPNuBKbmoqmvA488i0tHGJVsZeUWVlOV8cC1DV5kcG8GdU0rQ
      aTI7Ponuzyfff7cVzJ8Myw2acUjkNGzjue31GLEFFiIauVUleLBRvfUZ1hTaiZwXRFwAABG8
      SURBVC6EyVuxja0rS7ELNooqqynMfi/1oJPqDU0EAMlbzrq67OXjdoqrqsgPuRGc2Wx7dj81
      fpOF+UV0OZeGqhzAxdp9L1Ab0AlH4jj9ubjtkF29nk0N2cQXwyiaCYRY3dKEH8A0icUipDUD
      TINkPEoyrT+0p2EFw1k80VjBcBYWD4AlAIuMxhKARUZjCcAio7HcoJmGoRGLRpY9KQKS7CTg
      8/Jx7n41EUa1B3Df747aTwiWADKN2CRv/OtrxPDhkkUQ7JQ1bGb9qjJc9xDB4Il/YbD+73i6
      8vEV9XFgCSATCVXxwq7d5PlsJBYnOXn0FFf9PjZWZWVcn9gSQAYjiDbcWcWsXVXBxZv9KKXr
      UCauc/r0BQZnEjhzKtn3zB4qQh8Om46OXOaNd88zE0th8xSwcXcLzbkmx06dp2HzfsqDKhfe
      /APnFmv4m+/sxKHGOXPoDQq3fZWc8GXePHKR2Xgau7eIzS0trK7wM3D8LAvF2ShdbVxLV/A3
      L6xlvOcCpy/2sJCG/OqNPLd3LT77w5WoJYAMRxAEPF4/ojRPKh5jYHCS2pav83yuzPT14xy7
      MkLp3roP2cjeAnZ/+d+Q53ewOHCBM6PDrCiuxy/JLEZjlNrjzLgqqIuMMhaDcnGaaKqQlX4J
      2Sxmz1eayPM7mO89y+mRMVaU+TGJ0XNlhsaVLfx1bTHp+RuMLrp47jv/nqAY4+q7b3FlYgU7
      y1x3+SWfDksAGY+JpmlomoGaWqD3YisTbV1Lq7H0FOS5Uaj70PnpdJQrR//CjZkoqhJDyd/A
      7s1OSkM2rs1FKDcV/KF8CrKSjI8skC/1kixejV8yiaYWuXTsLQZnY6hKlGThNp7eagI2ihvW
      s7ahFEmAhZk+Lpxo5/LV8wiArkQoL4yDJQCLh4lpwtz0BA53OQ67SKhqPXv2vUCR925djTRd
      recIbv0yPywNoE138+rlKUAkvzSHo+enmJJNvO5qQn6B8d4+rofDVO8sQEShs/UCuTu+yjPF
      ftSJDg5eDS9f10Ew2/PBXgCSm4Ztz7N3b/M9B+cPSqaNeSxuwdTTzPSd5nR3muqGcrxuP05t
      jrbOIXTTQAmPcblr9DYrDUUxcHtcoMXpar/I2GwKAHt2IbkzowzMLeDODuF1BRFSPVyNFlEb
      XLJNpUzcbhdmOkJnexsT8+k7ls0fzCcy2k7/ZARTV1kYvkz3hPbQn4HVAmQaNgd5xiS//Zef
      IEoOsstX89LXDywPLh1sf3o/Z48f4x/+6xs4g8Xs2P80AK5QKSEngJvVu5t585WfcloIsmrN
      CpoDEpIogC2XlSvtnJotoCBkw274Cchu8qpKcQkAHlbvaOStP/6/nLRls2pVEytDTkRBwB3M
      QrglZbonv4Zn9ygcPvQbjkVNQuXNHNj/8N/XVjSoxRONFQ1qYfEAWAKwyGgsAVhkNJYALDIa
      SwAWGY3lBs004lO8/eZrXB+PI0l2fIV17H9qJ/kBB5KQZvDyBSbkKrY2Fd71EmklDnYPy+l9
      7kCMjkOnEVbtZGX+nWduTT2NkhZwuuw8xiwoH8Fyg2YakVF+d7yTll27yfXC7MAVDp2fZMMz
      +6nLdd9XZbz46n/B2Ph3bCr69MVIjp/m4DkPX/7yah4kuOFB3aBWC5DBiJKT3NrNbI0eoq93
      iIrsGqY6O4lnldJYko26MMDb75xiLKISKl/H87srud56lCNtIxiD/0i7x8aWl/4d1cpFeqin
      IH6V1ksxWr67g9ljnfg2raHULWOoMS4fe5P2wTD+8jWsLxc5c+wYXWM2wtNnya3ZyQtPreD9
      bKVGkqtH3uLizVnknDr2P7uLvEcUD2EJIMMRBMjNL+J6zwwptZLI1BTzUg6NRpgLxzrIWf8M
      e4tcLI6OsKD5Wb37edLhIYz132d9AdhkiHeO03EjwoTbzvYDO8khRffgOMa6ZkpNhWuHDjIc
      3MbXvlNAcn4MPFU8/0wc/YKLF19sxiXZeD9JoqHQffR1+hwr+cq3y0gOtXH4jaPsfX4P+Y9A
      BNYgOOMREEUJUby9KtgJBGyMXL9K78gi3rJ6ij0iNruM3SZil504nU5sy2YaHjbv2kFxyP3h
      ShUd5kq4lP1bq/G7PeSX1JGfZUOWbUg2GYfTicNu+6DrlZjmylyQPZtqCXo85Neso8S/yPRs
      /JH8eksAGY5pmkQiC4Ab+639AdFF3ZYdbF5RjjrdyWu/+yO9C8Zdr5Nf3UC24w4jCFUl5XDc
      fz9fU0naJBzLCUIFQcQuO5aS9D4CLAFkMKahEZ8dor17ksLqapy3enX0NItRlVBJFRu272Nf
      HVwbWXoLi6JEIh7HMHT0ZU18tAVZJlhIrTrG5dEwmmGgxBeIpwDJhpGMktJMDF3nfU+MN5s6
      Frg6Mo9qGCTmx5iaUwkE3Y/kGVhjgExktoc//GoQp0PG6Q3RtG4rjSUBBJQPzjE1Fkc7OfyX
      m8Q0E6c3j53PLeUHLayq5/KRX9J/ys3257/HPZ1BUhZrt9VypPVfuZJQ8eZXsbNlL3mBcnKN
      V/ndz3ooqN/BM7vrlwbBNj9rtq/g0KHX+flRDdHupWnzXooDMrHZfs51zLJ+y0aC2hSHjvRQ
      umstwQd4FJYbNNMwDdLpNJpuAAKiZMMh25dTkpvoqoYpSthEAcPQSKc1DECS7MjyUl/dNHTS
      6TSGCXaHC8lU0bAt7x+wdB0trSHYbUiCgGmaaGoKTTMQJDuybEfARFfTqJqOYJNxyLeMA0wT
      NZ1aKqNow+GwIwpL5VE1A7vdjmgapNI6ybSC8gBuUEsAFk80Vji0hcUDYAnAIqOxBGCR0Vhe
      IIsnnl9ePM+F2en3P68sLOI/PnPgvmwtAWQaqQid7Ze4Of3BzGr5uqdozo7R3p2gYXU5n2T3
      LS02w5Wb86xsqMFp/3B4aHRuiNlUiMoi30Mq/J1JaRrRVOr9z0lVvW9bSwCZRirCteE5qutX
      EvIsReD4/XZITdPePkflJxSAKHspLVxym95ObH6IwbD8yAXwIFgCyEQcPkrLKsgP3LJbfOSW
      700TJTrN4M1RYppETkkVJbl+bKbC2HSU7KCL6eEBFH8l1UETJa1iLnvx9cQ8vX03iKUhHplD
      D9SCaZKMTDM0NEY0ZeDKKqS6vBDXQ87z+Wn47Etg8bnDNGNcOPQOvVNRlNg8F0+eYGA6CmqY
      yx3X6T1/jAu9M6R1EzU8ztn26yiqAcoMp985St9sAlVLk4wraACmztxIH8NzMdS0wlD7WdqH
      Ht9u8PfCagEykekufvFP15GXQzm3f/3vWO/54Gtt+AL97o1866k6HILJxNXDnOodpX5TCOb6
      GCpr4flnK3DYRFJT48tWJtN911ksWMFzGxuwiTDRp9IdAQSJ3MqVNGdFSWs6AW2Ka1NRttTk
      PvaffjuWADKRvBV872u779oFis1N48pbi3N525js7CySM8uDzGAt21aXfGTACzrRsEBBSfD9
      kAhBEBAAw1Dpv3ycnmkTURJQ58eYyql+dL/vE2AJwOIjeLJySPTOkDKCyILBwkIYp7wc8ibZ
      sN1x4aSA3Z5ifj6JUW4uxfosR3kaWoSpCYmNzz9DsVMi0nuMgyN3XVD8WLEEYPER7BWbqb50
      kENHp8l1GYyMJ1i1vQRI3sNKori+hstvneNIao6gTWd04AZyTQOCKCOJ83RdbGNC1pjs7SAS
      2P24fs49sQSQaTiz2LR6JX7XbbvdOYvYti0bJyAIXjY9/TQDA8NEVYl121dRlu8H087qpmpc
      jg/e3vZAIZuagzjtIpKznH37TLoGJlAFP+t378dmDyDanKzdsYP+m1PozhDr975MgxB4vL/7
      LljRoBZPNJFIhF+fPcO1yOL7x+rz8vmfdrV8rK0VDm3xxGOFQ1tYPACWACwyGmsQbPHE0z09
      SdvCzIeONeYVUpmd87G2lgAyEpN0IsJCOIZmgN3lJeD3IdvER5qnU0+GWVAd5PidH3/yJ2A8
      vMhQ+sMu2my31xKAxZ0wiI73cOpiF3FVWNom0uamqnk9zdV5j7RCpBdH6F7IYceKTz5gfVRY
      AsgwzMQcZ8914avfSEtdCQ4JlGgERZARWUqUZRo6umEiCCKSJCIsZ3YwdB3DvPU4mIa5HAlq
      YBggLYdPGIaOYZhL4RDL5zvzG9mav/T97dcTl+/zuDNFWwLIMMIz4ySc2WyuLsVpW6puLn9w
      KXObqROeHODc2QvcmIwiuXPYsu9pmot9xCe6eOvt08wqGnZPHut37qG5IouRnnNMzjnQwj0M
      qAU8/9R2zMl2Tp5rZzKqYZNUhJIW/vZAM+GO13g9voHvbitBnevhz2+eYiaeQpQDrNi8k80r
      ypY26H6MWALIMBLJGA57ELtdIDV3k+OnzjMdsVOzcSvrK70MDo5SuP4F9pV6iI5d4p0zvVS9
      XMWFE9epfPobfKnIT3T4KkevXqAwZy9oUXq7hmjcsYO/qitGNiMcb+uldPtXeKk8SKz3GK8M
      fTSlouTIZtuL3yI/4CIx2c3pzgEi1aXkuB5vG2AJIMOw22R0Q0E3TByBIrbseprhrvOMjC+g
      FEoMtLfSf+YaR20AGpK8gnjEQ7dUwA9KgkhAVkE5gb5JYjEFSXBS2riWNQ0lyKKAmpohKdSw
      qTyETQSbzYb4kdViJmk1xtVDb3BjJko6lUQJVNO8SYPbQzQeMZYAMgyvP4gS7SacUPH6HfiD
      MgGfi/HUUviyt6SJr219iaps+QOjcB9ONY1igkdgqe+ua4iSCJIdr9e9tFE2ABKCoXHvVLZp
      +k6cxr3pJf62PAszPMY7Z9vhM4hJsCbCMgxnqJiGUIp3Dp9mKppGU9PEwlFUAewuN0Epzfm2
      blKahhKZ5OqVfhK+ItZ6xzlyaYSEmma8r535lJ9g4KPuTEnMxSX00jEwTUqJcPPmELGEdttZ
      BqmUil12YKoJeq+epX9c+ci1HgdWC5BhCDY3Tbtfwnv1JH/5zT8R1UTyq5vZvrka2eZgw97n
      sJ88ys9+fBLJn8eWln04RQ+rD3wJ5a1X+f/OR/CVruaZZ7YScoDqzSIou9733oh2L5v37ub4
      4df452N2ynPtOFxL1czuL6BYdgEuVu3fwesHf0G75qFx3Ro2rUrhsD/+3cKsYDiLh4ph6EwM
      DuAurCRgV+k79Q7X5Ga+uvXRrACLRCK83t72kYmwvTUNbC6vvKettUeYxUNHAJKz/bxz6BAx
      VSSnspmWnSWP9J5bK6o4kPPhWV+n/f4G01YLYPFEY4VDW1g8AJYALDIaSwAWGY0lgIwjxuU3
      jtA1G/3IN1pigcvnW5mM3cM82strx/seXfEeM5YXKOMwUGJx3t/e8UNf6SjJBNrdd0MFI000
      /vj99Y8KSwAZjmnqdJ96lVNXx1EFGWdOAaWAroTpunCcsx0jqHKQdbv3s6V2KZWhno5y9dhB
      zl+fwFe5gadbNhJyQmp+kOOHj9M7naaoeQcHtjXgtH2+OxmWADIZU2X4xEEuaU1849+9jD0+
      wZlL7QCkUxrOoia+vfkAtuQwr/3+NBM1L1MIxIa6iTfs57vbsuk69SbXekvYXCVx/OhZfKsP
      8KMKFz3HX+PPZ9x8ZWfF57qSfb7lafFoSc9weTKL51ua8Dsk7LITl7xUXZ0eNw5lhsOvH+TV
      t88wMTXCXGLJLFC7ka0NRThlO1kFBTh1nXhkBt1eyoqqPGyyj6YdmxD6+lm8x+0/D3yexWnx
      qNFVkrIb30fSdJpMDlzm8kCK5o3bcdtTdEQOkUpz11emYaiYph1RNAEBZAdOXeX2MLjPG1YL
      kMnIPoqUEdrGwuimQXxxitlIGjCJxWMEi6opK8rDJaSJJO+97ZDLk4NojDE6FcPQU0x2XCNc
      VPpAu7g/DqwWIJOxBdnQsoKDr/6SC4ZEVl4xLqcICOTlFdL+7pv85KJETknxHZ1Gt+L057Oy
      LpcTb/2aw0kDd045e5+u4eHmf3j4WLFAGYd5y2J1YXkRvLG0FmV5UbogLLk5P3pcRMDEMFle
      5WUu2SMgLH38kI24fI9HyYPGAlktQMYhfGiJoiAICNKdc/Xf+bjAB+bChzM5CHez+fxijQEs
      Mpr/HxlqT3vKwGLAAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='profit map drill down' width='192'>
      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
      PZL/H6IPQN5STWn6AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='sorting ' width='192'>
      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
    </thumbnail>
    <thumbnail height='167' name='sorting 2' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAACnCAYAAABHLVPlAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAbpUlEQVR4nO3de1xUZf7A8c+G0CDeUFQQRW79vCfEeCMp08LQXM1cMYyVIoU0IxOs1oSF
      aq0lRTZNSVGQxFu2mpsseEnF8MIg5AVxQ0FMIVJREIcdmJ3fHzNc5TYgMDDP+/Xy9dI55zzn
      e5z5znnOmfN9nj+oVCoVgqCnHmvrAAShLYkEEPSaSABBr4kEEPSaSABBr4kEEPSaSABBr4kE
      aGEymaytQxDqIRJA0GsiAQS9JhJA0GsiAQS9JhJAaJ6yO6RG+zPruXFIpVKkLq7MWRjG/l8K
      tWjkOEFSKXOjrzUlAO6k7iTwDVdcpFKk455j1sIwjuc3bmuRAEIzFJO08lXmxz7GvK3HkMlk
      nIqP5iO3EmK/TWuVCK7tW8KrC2MoezmC+FMyZIk/EPryfS5nNm77Ti0bntCxpRC/7zaDFi9i
      2gAjADp1tmD4tA/ZPq0Vdl94gH98dhIz3z38bdpAzYudsXlhBfMb2YQ4AwjNVni/uJ6l14ie
      K0UadLyB14C754j2n6HuyrjMwD/6HPV1pG4f3M+x0meZO2tg3SvlHyds4RxcXaQVXbQ3Vh4h
      twyi50pFAgjN4cTk6b3I3bKExdEy8hXNay0343eGLdtFoiyJA4EjOf+lD5/E151cF88lw6An
      GWZSX6M3we0jouNPIZOd4vjXc1B+v4wVe35j3jaZSAChOUxw/nA7GwPGcDdqMVOefQ5P/w0c
      vN60TLAYOwlpHyPAiD4vLMPv2VKO7P03t5sT4sg5LJk2HIvOnYBOdB7ijrszpKVfBkQXSGiu
      Tj1xdA8h5sdjHIkJYXzZvwh8eRLeO5tyR6cqEwYPs4PC+9wHjgdpujBSKdK50TS69bJcjoQt
      ZI6ri2b7Zwk8VrlYJIDwiBjRzd4FnzV7CZ9lyM9rtpLUzBZL5A8q/v5MsAyZTPNn2zwGAsOe
      HAWXz3Gxzl5SGSlhXiz7dxfmRsRzSrP96qmVa4gEEJquTIGirOaLnehrYQGlZTy0SCu/cT41
      F0N7GyzrWKPX+OcZZXiMbd/WdT64wYW029i5+zLNpnOttzxFAghNd2M7b83yJyIxk0IFQBkP
      svazLvYyvaZOwgEAM3qbA5mZXC2Dsge5XNi/i8O5DzdXVlzEgzJAkY9s3TLWXByG7zznuu/V
      932FD94dSc6GRfxlf5Zm20IyD37MxiT1vs0tDbly+BD/Uaj3LYv2Z/WRyiZEAghNZzmNAG9L
      fl7nx/RnpUilY5nss437L/6dqBXP0A0AE1wXfcj4exuZPXYcL/z5Yw5KxjLeokZbvSYy9r9f
      8ecXxiF1nk7Aj73xjfiSebb1/1Q10D2CfV/9CcU2HyaPlSJ9djof/LMLg+zV+560ZAVTimPw
      cJbynMfHJA5YyjsTK7f/gxgXqGXJZDKkUmlbhyHUQZwBBL0mEkDQayIBBL0mEkDQKzVrtEUC
      CHpNJICg10QCCHpNJICg10QC6JiM2CX4+HzId1ltHUlrSSPSJ4S4vLbZuyiJ1CkZnD07HC9P
      Od+nZjHTxqatA2oFDnhHOLTZ3sUZQJdknOXsECdGS52wTE5Fb04CbUicAXRIxtmzDHFyx0BS
      ipPlD5zLmYmNVdU1lBSe38+mHYe5fEuBgfEAxnktwtPBFIDS6yeIjv6Ws9flKI3MeHLam3i7
      2iABKM4kLiqa+Iv5yDFmwFOzeeN1Z/oZaFq+eZQN6/dyMV+O0sCYPsMmM8/LDXsTgGLSd/6D
      zSeyKVKAUVdrRr86Hw8nMww0cd1KiWXj9jNkF2ni8vStshzSIkPInRqIa6eTRIXFcubxKQQH
      umFOGpE+KThFeFNxHmhWrFpSCS0qOTm5kWteUm1bukmVWqb+lzzpS9XyvdeqrVF2aZtq6dJ1
      qsSbclWZSqVS3LmiOnzqP+qFt39Uhb79qWpP+h2VQqVSlclvqtKOnlPlq1QqlSpXFf/ZZxXL
      VIo7qvQ9n6qWbTmnkmuWHwgOVu2qWH5fdT1tr+q4pumy1E2qpV8eVd2Ul6lUqjKV/NYVVWJ8
      sqZtlUp+botq2YotqjMVcaWqtq1YqoqQ3a+IPXVTsOpA+inVur+GqQ6U70e9RLVpwSZVasW/
      mxdrQ2q+H6ILpCs03Z8Rmm85ydDh9EhOJadihRLOHErHeZEP4y0kGACGprZMHPMEAFlHDyHx
      8GPmEFMMAQOJBSOfHUFvgKwkLg3zrFiGoSlDZnrhkn2M1BIAOXJ5dyysypeb0H/kdFzUTVMq
      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
      RAIIeu3/AQ3c7fNvjqdwAAAAAElFTkSuQmCC
    </thumbnail>
  </thumbnails>
</workbook>
